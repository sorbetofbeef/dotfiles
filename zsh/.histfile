exit
nvim ~/.config/zsh/.zshrc
q
q
ls
q
nvim 
nvim
nvim .config/sway/config
amixer -c 0 -sset Master 5+
amixer -c 0 -- sset Master 5+
amixer -c 3 -- sset Master 5+
amixer -c 1 -- sset Master 5+
amixer -c 1 -- sset Master 5+
amixer -c 1 -- sset Master toggle
alsamixer
clear
q
l
cargo install lsd
cd ~/.local/src
ls
l
ls
git clone https://github.com/cli/cli.git
cd cli
cd ..
mv cli github-cli
cd github-cli
go build 
ls
cat README.md
git clone https://github.com/johnae/persway.git
cd persway
cargo build --release
cd target/release/
ls
cp persway ~/.local/bin
cd ..
cd ../../..
git clone https://codeberg.org/dnkl/tllist.git
cd tllist
mkdir build && cd build
meson --prefix=/usr --buildtype=release ..
ninja
sudo ninja install
cd ../..
git clone https://github.com/droc12345/wbg.git
cd wbg
meson --buildtype=release --prefix=/usr build
ninja -C build
sudo ninja -C build install
clear
q
nvim
ls
l
laa
todo
for script in ~/.local/bin/scripts/* ; do\
echo $script\
done
for script in ~/.local/bin/scripts/* ; do\
s="/home/me/.local/bin/${script##*/}"\
ln -sv "$script" "${s%.[sl][hu]*}"\
done
cd ~/.local/src
ls
cd github-cli
ls
cd build
ls
cd ..
mv persway ../
cd script
ls
go build build.go
ls
go run build
cat build.go
q
cd .local/src
rm github-cli
rm -rf github-cli
git clone https://github.com/cli/cli gh-cli
cd gh-cli
sudo make install prefix=/usr
go
make install prefix=/usr
sudo PATH="/usr/local/go/bin:${PATH}" make install
gh
c
cd ..
ls
gh auth login
qutebrowser
nvim .zprofile
nvim $ZDOTDIR/.zprofile
nvim $ZDOTDIR/zprofile
q
reboot
sudo reboot
nvim .config/sway/config
bar
cd ~/.local/src
git clone https://github.com/fmtlib/fmt.git
cd fmt
cd
cd ~/.local/src
rm -rf fmt
git clone https://github.com/open-source-parsers/jsoncpp.git
cd jsoncpp
ls
cat meson_options.txt
meson --prefix=/usr --buildtype=release build
ninja -C build
sudo ninja -C build install
cd 
cd -
cd ..
git clone https://github.com/Alexays/Waybar.git waybar
cd waybar
meson --prefix=/usr --buildtype=release build 
cd ..
ls
ls
ls ~
ls ~
ls ~/dl
mv ~/dl/atkmm-2.28.2.tar.xz ./
ex
ex a
ex atkmm-2.28.2.tar.xz
mb
mkdir build &&\
cd    build &&\
\
meson --prefix=/usr --buildtype=release .. &&\
ninja
sudo ninja install
cp ~/dl/gtk+-2.24.33.tar.xz ../../
cb
cd ../../
ex gtk+-2.24.33.tar.xz
sed -e 's#l \(gtk-.*\).sgml#& -o \1#' \\
    -i docs/{faq,tutorial}/Makefile.in      &&\
\
./configure --prefix=/usr --sysconfdir=/etc &&\
\
make
sudo make install
sudo gtk-query-immodules-2.0 --update-cache
cd ../
mv ~/dl/gtkmm-2.24.5.tar.xz ./
ex gtkmm-2.24.5.tar.xz
sed -e '/^libdocdir =/ s/$(book_name)/gtkmm-2.24.5/' \\
    -i docs/Makefile.in
./configure --prefix=/usr &&\
make
sudo make isntall
sudo make install
clear
cd ../waybar
ls
meson build
ls ~/dl
mv ~/dl/gtkmm-3.24.5.tar.xz ../
cd ..
ex gtkmm-3.24.5.tar.xz
mkdir gtkmm3-build &&\
cd    gtkmm3-build &&\
\
meson --prefix=/usr --buildtype=release .. &&\
ninja
cd ..
cd ..
ls
cd waybar
ls
meson build
cd ../gtkmm-3.24.5/gtkmm3-build
sud make install
sudo ninja install
cd ../../waybar
meson --prefix=/usr --buildtype=release build
ninja -C build
sudo ninja -C build install
bar
cd ~/.config/waybar
nvim
q
wbg
wbg /home/me/media/wp/redSeas.png
nvim ~/.config/sway/config
nvim ~/.config/sway/config
q
exit
nvim ~/.config/sway/config
sway
q
nvim ~/.config/sway/config
q
/home/me/media/wp/redSeas.png
ls /home/me/media
l /home/me/media
l /home/me/media/wp
l /home/me/media/wp/
wbg
wbg media/wp/redSeas.png
ls
ls media
ls
ls media/wp
nvim ~/.config/sway/config
bar
q
nvim ~/.config/waybar
nvim ~/.config/sway/config
q
clar
clear
q
alsamixer
q
q
wofi --show drun
lf
pfetch
l
rm .elinks
ls
cd =
cd -
ls
cd .config
q
alsamixer
todo
cargo install bat
ls
todo
todo
git clone https://github.com/dylanaraps/pfetch.git
nvim .config/sway/config
nvim .config/waybar/style.css
q
cd ~/.local/src/htop
l
./autogen.sh
./configure --prefix=/usr
make
sudo make install
htop
 git clone https://github.com/htop-dev/htop 
mv htop ~/.local/src/
cd ~/.local/src
ls
ls
cd htop
l
cat README
htop
ls
nvim ~/.config/foot/foot.ini
q
ls
foot
nvim ~/.zprofile
nvim ~/.zprofile
nvim ~/.config/sway/config.d/10-command-vars.conf
w
q
cd ~/.local/src
git clone https://codeberg.org/dnkl/foot
cd foot
ls
mkcd bld/release
echo $LC_CTYPE
export $LC_CTYPE='en_US.utf8'
export $LC_CTYPE='en_US.UTF-8'
export LC_CTYPE='en_US.UTF-8'
cd ..
cd ..
cat ./pgo/pgo.sh
./pgo/pgo.sh full-headless-sway
./pgo/pgo.sh full-headless-sway . /tmp/foot-pgo-build-output
foot
ls
cd pgo
ls
cd ..
ls
foot
sud ninja -C /tmp/foot-pgo-build-output install
sudo ninja -C /tmp/foot-pgo-build-output install
fooyt
fooy
foot
foot
q
bar
nvim ~/.config/waybar/style.css
exit
logout
swaymsg exit
foot
ls
ls /usr/local/bin
cd /tmp
ls
ls foot-pgo-build-output
cd foot-pgo-build-output
ls
cd completions
ls
cd ..
cd doc
ls
ninja install
cd -
cd ~/.local/src/foot
sudo ninja install
ls
cd bld/release
ls
cd ..
ls
cd ..
cd scripts
ls
cd ..
ls
cd subprojects
ls
cd ..
cd pgo
ls
nvim full-
nvim full-headless-sway.sh
nvim ~/.config/waybar/style.css
bar
nvim $ZDOTDIR/alias-common
q
q
foot
ls
clear
nvim docs/this/test/test.txt
htop
pfetch
ba
bar
q
reboot
persway
persway -h
man persway
persway --help
nvim ~/.config/sway/config
foot-server -h
foot --server
persway
htop
nvim ~/.config/sway/config
q
exit
nvim ~/.config/sway/config
q
nvim
q
lazygit
q
nvim
nvim
nvim
nvim
q
ls
q
cd 
ls
cd docs
nvim ~/.config/sway/config.d/20-keymaps.conf
alsamiser
alsamixer
q
nvim
nvim ~/.config/sway/config
nvim
q
btm
btm -b
mkdir -p /etc/runnit
sudo su --login
su -
su --login
su --login
cd /sbin
ls
cd /etc/sv/getty-5
ls
sudo nvim run
sudo nvim finish
q
sudo su --login
q
ls /boot
ls /boot
q
sudo efibootmgr --help
sudo efibootmgr
sudo efibootmgr -b 0001 -B
sudo efibootmgr -b 0002 -B
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L LFS -l /vmlinuz-lfs -u 'root=/dev/nvme0n1p4 resume=/dev/nvme0n1p2 initrd=\microcode.img rw quiet'
q
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L LFS -l /vmlinuz-lfs -u 'root=/dev/nvme0n1p4 resume=/dev/nvme0n1p2 initrd=\microcode.img rw quiet init=/sbin/runit-init'
sudo efibootmgr -b 0002 -B
sudo efibootmgr -b 0001 -B
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L LFS -l /vmlinuz-lfs -u 'root=/dev/nvme0n1p4 resume=/dev/nvme0n1p2 initrd=\microcode.img rw quiet init=/sbin/runit-init'
reboot
sudo 
sudo mkdir /run/user/1000
ls /run
ls /run/user
ls /run/user/1000
q
chown -v -R me:me /run/user/1000
chmod -v -R 0700 /run/user/1000
q
ls
clear
cd 
cd .local
ls
cd ..
ls
seatd-launch sway
ls /run/user
ls /run/user/1000
htop
btm
btm -b
clear
exit
cd /etc/init.d
ls
sudo checkfs
sudo nvim checkfs
mkdir /etc/sv/checkfs
sudo mkdir /etc/sv/checkfs
sudo nvim /etc/sv/checkfs/run
sudo nvim /etc/sv/checkfs/run
q
nvim /etc/sv/checkfs
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L LFS -l /vmlinuz-lfs -u 'root=/dev/nvme0n1p4 resume=/dev/nvme0n1p2 initrd=\microcode.img rw quiet init=/sbin/runit-init'
dmesg
c
nvim /etc/runit/1
nvim /etc/runit/1
ls
cat run
\:q
rm run
sudo /etc/sv/dhcpcd
sudo nvim /etc/sv/dhcpcd
q
sudo wpa_supplicant -h
q
/etc/init.d
ls
nvim sysctl
ls
cd
ls
q
cargo install rip-rm
cargo install rip
cargo install rm-rip
cargo install rm-improved
q
pip3 install pyqt5.qtsql
pip3 install qtquick
pip3 install quick
pip3 install qtopengl
pip3 install QtOpenGl
pip3 install QtOpenGL
pip3 install pyqt6.qtqucik
pip3 install pyqt5
pip3 uninstall qutebrowser
pip3 uninstall --help
pip3 install qutebrowser
qutebrowser
lf
pip3 list
pip3 uninstall PyQt5-Qt6
pip3 uninstall PyQt5-Qt5
pip3 uninstall PyQt5-
pip3 uninstall PyQt5
clear
pip3 uninstall PyQt5
pip3 list
pip3 uninstall Jinja2
pip3 uninstall PyQtWebengine-Qt5
pip3 uninstall PyQtWebengine
pip3 list
pip3 uninstall pywayland
q
lf
pip3 install PyQt5
pip3 install PyQt5-Qml
pip3 install PyQt5-QtQucik
pip3 install PyQt5-QtQuick
pip3 install PyQt5-QtQml
pip3 install PyQt5-QtCore
pip3 install PyQt5.QtCore
pip3 install PyQt5.QtQml
pip3 install PyQtQml
pip3 install QtQml
pip3 install QtSql
pip3 install QtWidgets
pip3 install QtCore
pip3 install QtSql
pip3 install qutebrowser
qutebrowser
pip3 install --help
pip3 install pip
pip3 install --upgrade pip
clear
pip3 install qtgui
pip3 install qtqml
pip3 install QtQml
pip3 install PyQt5.QtGui
pip3 install pywayland
qutebrowser
pip3 install pyqt5-qtquick
pip3 install qtquick
pip3 install QtQuick
pip3 install PyQt5-QtQuick
pip3 install QtQML
pip3 install QML
q
nvim ~/.config/foot/foot.ini
q
exit
ls
clear
htop
git clone https://github.com/sorbetofbeef/documents
cd documents
ls
mv -v {*,.git*} ~/docs/
cd ..
rm documents
rm -rf documents
q
echo 'cmd ztar !tar --zstd -cf $fi' >> ~/.config/lf/lfrc
nvim ~/.config/lf/lfrc
q
cd ~/.local/share
ls
cd ..
cd src
ls
ls ~/dl
;f
lf
nvim
nvim
cd ~/.local/src/neovim
make dist clean
make clean
make distclean
git pull origin
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr
sudo make install
q
cd ~/.local/src
git clone https://github.com/riverwm/river
cd river
ls
cat README.md
firefox https://ziglang.org/download
cd .local/src
ls
cd wayland
ls
cd swat-borders
cd sway-borders
ls
meson --buildtype=release --prefix=/usr 
meson --buildtype=release --prefix=/usr build 
meson configure build
meson reconfigure --buildtype=release --prefix=/usr --b_pgo=generate --b_lto=true b_lto_threads=16 build
meson reconfigure --buildtype=release --prefix=/usr --b_pgo=generate --b_lto=true b_lto_threads=16 
meson wipe --buildtype=release --prefix=/usr --b_pgo=generate --b_lto=true b_lto_threads=16 
meson wipe
cd ..
cd wlroots/
ls
ninja -C build uninstall
sudo ninja -C build uninstall
sudo ninja -C build clean
sudo ninja -C build distclean
sudo ninja -C build clean-ctlist
rip build
ls
cat meson_options.txt
meson --buildtype=release --prefix=/usr --b_pgo=generate build
meson --buildtype=release --prefix=/usr -Db_pgo=generate build
rm -rf build
meson --buildtype=release --prefix=/usr -Db_pgo=generate -Db_lto=true -Db_lto_threads=16 build
ninja -C build
cd ../
cd -
sudo ninja -C build install
cd ../sway-borders
meson --buildtype=release --prefix=/usr -Db_pgo=generate -Db_lto=true -Db_lto_threads=16 build
rm -rf build
meson --buildtype=release --prefix=/usr -Db_pgo=generate -Db_lto=true -Db_lto_threads=16 build
ninja -C build
cd ../sway
sudo ninja -C build uninstall
cd -
sudo ninja -C build install
exit
exit
ls
htop
cd ~/.local/src/wayland/wlroots
ls
nvim ~/.config/sway/config
q
man 5 sway
man 5 sway
nvim ~/.config/sway/config.d/20-keymaps.conf
q
q
man 5 sway
q
nvim
q
ls ~/.dl
ls dl
mv dl/zig-0.9.0.tar.xz ~/.local/src/developmnet
cd .local/src/developmnet
ex zig-0.9.0.tar.xz
l
cat README.md
make CMAKE_INSTALL_PREFIX=/usr
meson CMAKE_INSTALL_PREFIX=/usr
ls
cd CMAKE_INSTALL_PREFIX=
ls
cd ..
rm -rf CMAKE_INSTALL_PREFIX=
cd doc
ls
cd ..
cd ..
rm zig*
rm -rf zig-0.9.0
ls
mv ~/dl/zig-linux-x86_64-0.9.0.tar.xz
mv ~/dl/zig-linux-x86_64-0.9.0.tar.xz ./
ls
ex zig-linux-x86_64-0.9.0.tar.xz
ls
cd lib
ls
cd ..
ls
cd doc
ls
cd std
ls
xdg-open index.html
ls
cd ../../
ls
cd ..
ls
mv zig-linux-x86_64-0.9.0 ~/.local/share/zig
cd ../../share/zig
ls
nvim ~/.zprofile
q
cd ~/.local/src/wayland/sway-borders
ninja -C build uninstall
sudo ninja -C build uninstall
cd ../wlroots
sudo ninja -C build uninstall
cd ..
ls
ex wlroots-0.15.0.tar.gz
meson --buildtype=release --prefix=/usr -Db_pgo=generate -Db_lto=true -Db_lto_threads=16 build
ninja -C build 
sudo ninja -C build install
cd ..
ls
cd river
git submodule update --init --recursive
ls 
cd ..
ls
cd ..
ls
source ~/.zprofile
nvim ~/.zprofile
source ~/.zprofile
cd ri
cd wayland/river
ls
cat README.md
zig build -Drelease-safe --prefix ~/.local install\

q
cd .config/
ls
cd river
ls
nvim init
clear
cd
q
man riverctl
riverctl list-inputs
nvim ~/.config/river/init
q
ls
ls
nvim .config/river/init
q
riverctl list-inputs
q
 wofi --show run
q
nvim ~/.config/river/init
ls
nvim ~/.zprofile
seatd-launch sway
seatd-launch river
seatd-launch river
exit
man riverctl
riverctl list-inputs
nvim .zprofile
nvim ~/.config/river/init
q
nvim ~/.config/waybar
nvim ~/.config/waybar/style.css
bar
nvim ~/.config/waybar/config
bar
ls
clear
q
q
nvim ~/.config/kitty/monochrome.conf
q
nvim ~/.config/foot/foot.ini
q
q
ls
cd dl
ls
l
cd ..
ls
cd docs
ls
cd lfs
ls
cd ..
ls
nvim ~/.config
curl -fsSL https://fnm.vercel.app/install | bash
source /home/me/.config/zsh/.zshrc
fnm completions --shell zsh > ~/.config/zsh/shell_funcs/_fnm
q
q
exit
ls
l
cd .fnm
ls
fnm 
fnm current
q
q
lf
fnm 
cat ~/.config/zsh/shell_funcs
cat ~/.config/zsh/shell_funcs/_fnm
nvim ~/.config/zsh/.zshrc
fnm install --help
fnm install latest
fnm install @latest
fnm install v17
fnm
nvim ~/.config/zsh/.zshrc
q
fnm current
fnm default
fnm default --fnm-dir $XDG_CONFIG_HOME/fnm v17
ls
fnm current
fnm --help
printenv
nvim ~/.zprofile
\:wqa
exit
ls
fnm
alias v17.4.0 latest
fnm
fnm current
fnm default latest
fnm default $latest
fnm alias --help
fnm alias v17.4.0 latest
ls
l
cd ~/.config/fnm/node-versions
ls
nvim ~/.zprofile
q
yarn bin
ls
cat .yarnrc
yarn --global bin
ls
l
yarn --help
yarn global bin
ls
mv .npm ~/.cache
mv .cache/.npm .cache/npm
ls
l
mv .fnm .config/fnm
ls
ls
l
q
fnm default v17
fnm default v17.0.4
fnm current
fnm default v17.4.0
fnm current
ls
fnm list
fnm install yarn@latest
fnm install yarn
fnm exec npm i -g yarn
fnm exec --help
fnm exec --using v17.4.0 "npm install --global yarn\
"
fnm exec --using v17.4.0 npm install --global yarn
fnm exec --using v17.4.0 yarn global add bash-language-server
yarn
ls
l
rm yarn.lock
rm -rf node_modules
ls
l
rm -rf .elinks
nvim ~/.zprofile
q
ls
l
showconsolefont
setfont ter-112n
setfont ter-114n
setfont ter-i14n
setfont ter-h14n
setfont ter-gi14b
setfont ter-g14b
setfont ter-g14n
setfont ter-g14b
setfont ter-g14n
setfont ter-h14n
setfont ter-914n
setfont ter-714n
ls
clear
fgconsole -h
fg --help
fg 
bat
tty
q
nvim .zprofile
yarn global add neovim tree-sitter
yarn global add neovim
pip3 install neovim
yarn global add tree-sitter-cli
nvim
exit
q
nvim 
yarn global bin
echo $PATH
nvim ~/.zprofile
$(yarn global bin)
echo $(yarn global bin)
nvim ~/.zprofile
q
nvim
q
lf
make clean
make distclean
make uninstall
sudo make uninstall
rm -rf /usr/bin/nvim /usr/lib/nvim/ /usr/share/nvim 
sudo rm -rf /usr/bin/nvim /usr/lib/nvim/ /usr/share/nvim 
gi pull
git pull
git fetch all
git fetch --all
git pull origin
cat CMakeLists.txt
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr
cd ..
rip neovim
git clone https://github.com/neovim/neovim
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr
cd neovim
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr
cat README.md
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr
ls
sudo make install
cd 
nvim
nvim
nvim
exit
nvim
q
nvim
q
q
cargo istall ripgrep
cargo install ripgrep
yarn global list
neovim-node-host
clear
cargo install find-fd
cargo install fd-find
nvim
nvim
nvim
cd
c
lf
nvim ~/.config
cd ~/.local/src/oguri
meson --buildtype=release --prefix=/usr build
ninja -C build
sudo ninja -C build install
pkill wbg
oguri
mv ~/.config/oguri/oguri.ini ~/.config/oguri/config
oguri
ls
cd build
ls
cd ..
cd contrib
ls
cd ..
ls
nvim meson.build
clear
l
nvim ~/.config/oguri
cd ~/.local/src
gh repo clone vilhalmer/oguri
gh auth login
gh repo clone vilhalmer/oguri
ls
cd oguri
ls
cat README.md
clea
l
htop
q
oguri
