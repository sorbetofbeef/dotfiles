q
htop
q
ls
l
q
f
f
f
tar -xf jetbrains-toolbox-1.28.1.15219.tar.gz
ls
cd jetbrains-toolbox-1.28.1.15219
ls
mv jetbrains-toolbox ~/.local/bin
clear
q
jetbrains-toolbox
sudo emerge fuse
sudo emerge sys-fs/fuse
sudo emerge fuse-coomon
sudo emerge fuse-common
sudo emerge fuse-overlayfs
q
jetbrains-toolbox
sudo emerge fuse-utils
q
jetbrains-toolbox
cd /usr/src/
eselect kernel set linux-6.4.2-gentoo
sudo eselect kernel set linux-6.4.2-gentoo
cd linux
sudo make menuconfig
sudo make --j16 && sudo make modules_install
sudo make --j16
sudo make -j16 && make modules_install
sudo make modules_install
sudo make install
clear
ls
cd /boot
ls
cd EFI
ls
q
cd /usr/src/linux
sudo make menuconfig
q
sudo emerge sys-fs/fuse:0
jetbrains-toolbox
jetbrains-toolbox --help
jetbrains-toolbox -h
jetbrains-toolbox toggle
jetbrains-toolbox
htop
nvim ~/.config/zsh/.zshenv
q
sudo emerge java-config
sudo emerge openjdk-bin
sudo eselect java-vm set system 1
sudo eselect java-vm list
eselect java-vm set openjdk-bin-17
eselect java-vm list
eselect ecj list
sudo eselect editor list
q
sudo emerge --oneshot virtual/jdk
sudo emerge --oneshot virtual/jdk virtual/jre
clear
q
jetbrains-toolbox
ls
cd dl
ls
cd jetbrains-toolbox-1.28.1.15219
l
nvim ~/.config/zsh/.zshenv
q
exec start
jetbrains-toolbox
jetbrains-toolbox --graphics-api software
nvim ~/.config/zsh/.zshenv
q
exec start
jetbrains-toolbox
jetbrains-toolbox --graphics-api Software
jetbrains-toolbox --graphics-api software
cd .local/bin
ls
l
l
ls
l
q
projects
nvim ~/workspace/current_project/dev-env
qq
q
nvim ~/.config/river/bindings
f
f
q
f
q
nvim /home/me/workspace/current_project/create-project.py
q
nvim ~/github.com/sorbetofbeef/cocktail-codex/dev-env/project-session.conf
man waybar-tray
q
nvim ~/.config/waybar/config
nvim ~/.config/waybar/config
q
waybar
sudo emerge waybar
sudo nvim /etc/portage/package.use/package.use
sudo emerge --changed-use waybar
q
sudo jetbrains-toolbox
sudo /home/me/.local/bin/jetbrains-toolbox
htop
jetbrains-toolbox
exec start
jetbrains-toolbox
q
1p
htop
q
htop
q
htop
q
sudo emerge libXi
sudo emerge libXrender
sudo emerge libXtst
sudo emerge mesa-progs
sudo emerge Gtk3
sudo emerge gtk
sudo emerge gtk+
jetbrains-toolbox
sudo groupadd fuse
ls /etc/group
bat /etc/group
bat /etc/group | rg -i fuse
sudo usermod -a -G fuse me
which fusermount
l /usr/bin/fusermount
sudo chmod u+s $(which fusermount)
l /usr/bin/fusermount
q
exec start
jetbrains-toolbox
htop 
q
neomutt
neomutt
neomutt
q
sudo emerge neomutt
clear
q
nvim ~/workspace/current_project/dev-env/project-session.conf
q
nvim ~/workspace/current_project/dev-env/project-session.conf
ls
f
cargo install du-dust
q
dust .Trash
rm -rf .Trash/*
sudo rm -rf .Trash/*
ls
dust .Trash
rm -rf .Trash/.npm/
dust .Trash
dust ./
cd .local/src/neovim
ls
make clean && make distclean && git pull
make -j16 CMAKE_BUILD_TYPE=Release && rm_neovim && sudo make install
nvim --headless
q
projects
projects
projects
projects
projects
projects
projects
projects
projects
projects
projects
projects
rm -rf github.com/sorbetofbeef/test
projects
rm -rf github.com/sorbetofbeef/test
projects
rm -rf github.com/sorbetofbeef/test
projects
rm -rf github.com/sorbetofbeef/test
projects
rm -rf github.com/sorbetofbeef/test
projects
projects
cd workspace/current_project
ls
cd cmd
ls
bat main.go
ls main.go
l
ls internal
ls internal/models
ls
cd ..
ls
cd ..
ls
l
l temps
nvim .current_project.json
q
projects
printenv |rg -i selected
q
projects
projects
projects
projects
projects
q
projects
cd workspace/current_project
ls
source venv/bin/activate
q
nvim ~/github.com/sorbetofbeef/create-project
exec start
neomutt
q
ncspot
exec start
q
cd /usr/src/linux
ls
make menuconfig
sudo make menuconfig
sudo make -j16
sudo make modules_install
sudo make install
q
sudo emerge --sync
sudo emerge --update --deep --newuse --with-bdeps=y @world
sudo emerge --pretend --depclean fuse:3
sudo emerge --pretend --depclean fuse:3 fuse-overlayfs xdg-desktop-portal
sudo emerge --pretend --depclean fuse:3 fuse-overlayfs xdg-desktop-portal xdg-desktop-portal-gnome xdg-desktop-portal-gtk xdg-desktop-portal-wlr
sudo emerge --depclean fuse:3 fuse-overlayfs xdg-desktop-portal xdg-desktop-portal-gnome xdg-desktop-portal-gtk xdg-desktop-portal-wlr
sudo emerge xdg-desktop-portal xdg-desktop-portal-gnome xdg-desktop-portal-gtk xdg-desktop-portal-wlr
clear
sudo emerge --update --deep --newuse --with-bdeps=y @world
sudo emerge --depcleam
sudo emerge --depcleam
sudo emerge --depclean
clear
sudo emerge thermald
cd /usr/src/linux
sudo make menu_config
eselect kernel list
ls
sudo make menuconfig
sudo make menuconfig
lsmod
sudo make -j16
sudo make modules_install
sudo make install
sudo reboot
sudo rc-config add thermald
cd /etc/inittab.d/
ls
l
cd ../init.d
ls
l
sudo nvim thermald\\

sudo reboot
exec start
projects
cd workspace/current_project/
source ./venv/bin/activate
c
nvim
projects 
bat ~/.config/environment.d/project.sh
q
projects 
projects 
f
projects 
q
projects
projects
projects
projects
projects
projects
projects
gh repo delete --yes sorbetofbeef/test
gh auth refresh -h github.com -s delete_repo
gh repo delete --yes sorbetofbeef/test
projects
projects
f
ls
bat ~/.config/environment.d/project.sh
projects
 projects
projects
c
projects
projects
projects
projects
projects
q
python3 -h
python3 --help-all
c
projects
bat .config/environment.d/project.sh
projects
projects
bat .config/environment.d/project.sh
projects
q
bat .config/environment.d/project.sh
projects
projects
projects
q
projects
projects
q
q
projects
projects
projects
projects
q
projects
projects
projects
projects
projects
cd workspace/current_project
l
cd ~/github.com/sorbetofbeef/create-project
l
source env/bin/activate
pip3 install colorama
clear
ls
q
f
nvim
nvim
nvim
nvim
nvim
q
projects
projects
projects
projects
projects
projects
projects
projects
q
projects
projects
projects
f
cd
projects
cd -
nvim
q
cd github.com/sorbetofbeef/create-project/
ls
nvim projects.sh
q
projects
projects
pro
projects
projects
projects
q
projects
projects
projects
projects
projects
projects
projects
projects
projects
projects
q
projects
projects
nvim ~/github.com/sorbetofbeef/create-project/create-project.py
projects
nvim ~/github.com/sorbetofbeef/create-project/create-project.py
nvim ~/github.com/sorbetofbeef/create-project/create-project.py
nvim ~/github.com/sorbetofbeef/create-project/create-project.py
q
projects
projects
projects
projects
projects
projects
projects
projects
projects
projects
q
f
source ./env/bin/activate
l
nvim
q
projects
nvim ~/github.com/sorbetofbeef/create-project/projects.sh
q
projects
nvim ~/github.com/sorbetofbeef/create-project/projects.sh
projects
nvim ~/github.com/sorbetofbeef/create-project/projects.sh
projects
nvim ~/github.com/sorbetofbeef/create-project/projects.sh
cd github.com/sorbetofbeef/create_project/
source env/bin/activate
nvim
deactivate
source env/bin/activate
nvim core.py
nvim projects.sh
deactivate
q
projects
f
alias
ln -sv ~/github.com/sorbetofbeef/create_project/projects.sh $PWD/proj
q
proj
cd github.com/sorbetofbeef/create_project
source env/bin/activate
pip3 install colorama
deactivate
rm -rf env
ls
l
python3 -m venv ./venv
source venv/bin/activate
pip3 install colorama
nvim
deactivate
proj
cd
cd workspace/current_project/
ls
cd cmd
l
nvim main.go
neomutt
htop
neomutt
mv .local/bin/proj .local/bin/prj
prj
nvim ~/.config/environment.d/dark_mode.sh
nvim ~/.config/environment.d/dark_mode.sh
q
nvim
nvim
nvim
q
q
nvim ~/.config/kitty/kitty.conf
exec start
ls
nvim ~/.config/kitty/kitty.conf
q
q
jetbrains-toolbox
nvim ~/.config/waybar/style.css
nvim .config/nvim/lua/user/themes/citruszest.lua
q
nvim
nvim .config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim
htop
q
prj
q
nvim ~/.config/kitty/themes/citruszest_dark.conf
q
cd /usr/src/linux
sudo emerge --syc
sudo emerge --sync
sudo emerge --update --newuse --deep --with-bdeps=y @world
sudo emerge --depclean
clear
sudo make menuconfig
sudo make menuconfig
sudo make -j16
sudo make modules_install
sudo make install
clear
q
exec start
nvim ~/.config/nvim/lua/user/themes
nvim
q
ls
nvim
nvim ~/.config/environment.d
nvim ~/.config/environment.d
q
nvim
q
nvim
q
rm .cache/kitty
rm -rf .cache/kitty
q
q
exec start
ls
clear
q
nvim
q
bat .local/var/log/postgresql_090720231136.log
q
cd cocktail-codex-go.backend
go run ./cmd/api/*.go
go run ./cmd/api/*.go
go run ./cmd/api/*.go
go run ./cmd/api/*.go
go run ./cmd/api/*.go
sudo emerge idea-community
sudo eselect repository list
sudo eselect repository set gentoo-zh
sudo eselect repository enable gentoo-zh
q
sudo emerge --sync
sudo emerge --update --newuse --deep --with-bdeps=y @world
sudo env-update
sudo etc-update
fwupdmgr get-devices
fwupdmgr get-updates
exec start
htop
q
f
ls
fzf
cd ../
fzf
f
./jetbrains-toolbox
l
cd ..
ls
cd ..
ls
cd ..
ls
rm -rf JetBrains
q
sudo emerge jetbrains-toolbox
q
q
f
./jetbrains-toolbox
ls
htop
exec ./jetbrains-toolbox
ls
f
./jetbrains-toolbox
htop
q
fc-list | rg -i nerd
fc-list : family | rg -i nerd
fc-list : family | rg -i symbols
q
cd .local/src
cd neovide
ls
bat README.md
cargo build --all-features
f
ls
l examples
./neovide
sudo emerge gcc
sudo emerge gpp
sudo emerge --search gpp
sudo emerge gpp
sudo emerge expat
neovide --debug
neovide --help
neovide --neovim-bin /usr/local/bin/nvim
neovide --neovim-bin /usr/local/bin/nvim --nofork
clear
cd
cargo install --git=https://github.com/neovide/neovide.git
neovide
neovide --nofork
cd -
ls
cd ..
cd ..
ls
git pull
clear
ls
bat Cargo.toml
git fetch
git fetch --all
ls
cargo build --locked
cd
cd -
./target/release/neovide
./target/release/neovide --nofork
neovide --version
clear
rm target/
rm -rf target
ls
git pull
cd 
cd -
cd ..
rm -rf neovi
rm -rf neovide
gh repo clone neovide/neovide
clear
ls
cd neovide
ls
cargo build
cargo uninstall neovide
ls
cd target/
ls
cd debug/
ls
./neovide
cp ./neovide ~/.local/bin
q
neovide
q
nvim 
q
q
q
htop
q
cd cocktail-codex-go.backend
go run cmd/api/*.go
nvim ~/.local/bin
q
htop
htop
f
q
bat ~/.local/var/log/postgresql_090720232247.log
q
bat ~/.local/var/log/postgresql_090720232247.log
q
bat ~/.local/var/log/postgresql_090720232247.log
q
cd cocktail-codex-go.backend
go run cmd/api/*.go
go run cmd/api/*.go
nvim ~/.local/bin/1p
q
code $(cat ~/.config/brave-flags.conf)
cd ~/.local/src/neovim
ls
make clean && make distclean && git pull && make -j16 && rm_neovim && sudo make install
make clean && make distclean && git pull && make -j16 CMAKE_BUILD_TYPE=Release && rm_neovim && sudo make install
clear
q
nvim
neovim  --headless
nvim  --headless
q
kitty --help
kitty --detach neovide
nvim ~/.local/bin/nvide
q
f
q
neovide --help
q
nvide
nvim ~/.local/bin/nvide
q
nvide
nvim ~/.local/bin/nvide
q
f
unzip project-setup.zip
ls
l
rm -rf __MACOSX
rm project-setup.zip
q
f
nvim main.go
cd ..
ls
f
prj
prj
f
cd ..
mv create_project create-project
f
prj
f
q
f
ln -sfv $PWD/projects.sh ~/.local/bin/prj
q
python -m venv ~/github.com/sorbetofbeef/create-project/venv
cd ~/github.com/sorbetofbeef/create-project/venv
cd ..
source ./venv/bin/activate
prj
pip install colorama
c
project
./projects.sh
q
prj
nvim ~/github.com/sorbetofbeef/create-project
prj
q
q
f
./open.sh
q
f
ln -sv $PWD/open.sh ~/.local/bin/ide
q
yarn add @tanstack/react-query
yarn add -D @tanstack/eslint-plugin-query
yarn add -D @tanstack/eslint-plugin-query
yarn add @tanstack/react-query-devtools
f
dust ./
cd ..
sudo dust ./.cache
sudo /home/me/.local/share/cargo/bin/dust ./.cache
q
htop
exec start
htop
nivm
nvim
q
nvim
q
nvim ~/.config/nvim/lua/user/plugins/modules/lsp.lua
nvim ~/.config/nvim/lua/user/plugins/modules/lsp.lua
q
q
q
q
nvim ~/.config/nvim/lua/user/plugins/modules/typescript-tools.lua
q
q
cd cocktail-codex-go.backend
go run cmd/api/*.go
htop
q
fwupdmgr refresh
fwupdmgr get-updates
q
fwupdmgr
fwupdmgr get-approved-firmware
fwupdmgr get-updates
fwupdmgr update
fwupdmgr install
fwupdmgr get-devices
q
sudo emerge --sync
sudo emerge --update --deep --newuse --with-bdeps=y
sudo emerge --update --deep --newuse --with-bdeps=y @world
sudo emerge --update --deep --newuse --with-bdeps=y @world
sudo emerge --depclean
sudo etc-update
exec start
fwupdmgr refresh
fwupdmgr refresh --force
fwupdmgr get-devices
fwupdmgr get-updates
fwupdmgr update
exec start
htop
lsmod
sudo modprobe i2c:synaptics_i2c
ls
lsmod
vscode
code
q
cargo install starship
nvim ~/.zprofile
ls
l
ls -lah
rm .zprofile
ln -sf ~/.config/zsh/.zprofile $HOME/.zprofile
nvim .zprofile
sudo nvim /etc/environment
exit
nvim ~/.config/zsh/.zprofile
cargo install starship
paru -S cmake
cargo install starship
exit
paru -S fzf
paru -S fzf
exit
cd .local
git stats
git status
git branch
cargo install git-delta
exit
q
cd .local/
git fetch --all
git branch
ls bin/scripts
ls bin/
ls
cd ,,
cd ..
paru -S hyprland xdg-desktop-portal-hyprland xdg-desktop-portal-gtk
htop
htop
dbus-launch --exit-with-session Hyprland
paru -S kitty
paru -S kitty wofi
dbus-launch --exit-with-session Hyprland
exec dbus-launch --exit-with-session Hyprland
htop
paru -S waybar
fc-cache -frv
sudo fc-cache -frv
q
q
exec dbus-launch --exit-with-session Hyprland
fc-list : family | rg -i nerd
paru -S nerd-fonts-sf-mono-ligatures
paru -S ttf-nerd-fonts-symbols
kitty list-fonts
sudo fc-cache -frv
clear
ls
nvim ~/.config/kitty
kitty list-fonts
rm .cache/kitty
rm -rf .cache/kitty
sudo reboot
exec dbus-launch --exit-with-session Hyprland
ls
paru -S 1password 1password-cli
gh repo list
gh auth login
gh repo list
gh repo clone mac_docs
clear
ls
ls mac_docs
htop
htop
htop
paru -S pipewire-alsa pipewire-pulse wireplumber
clear
nvim ~/.config/hypr/hyprland.conf
cd .config
gh repo clone nvim.conf -- nvim
nvim --headless -c "Lazy sync"
nvim
sudo pacman -Syyu
paru -Syyu
clear
paru -S nodejs yarn
yarn global add neovim
sudo pip install neovim
paru -S python
paru -S python-pip
paru -S python-keyring python-xdg
c
nvim
paru -S npm
clear
q
nvim
cd .local/src
ls
gh repo clone neovim/neovim
cd ../../github.com/sorbetofbeef
gh repo clone create-project
gh repo clone build-nvim
cd build-nvim
ls
ln -sv $PWD/nvbuild.sh $HOME/.local/bin
mv $HOME/.local/bin/nvbuild.sh $HOME/.local/bin/nvbuild
cd ~/.local/src
gh repo clone mac_data
cd mac_data
ls
ls bin
ls bin/s
ls bin/scripts
ls ~/.local/bin/scripts
cp -r ./bin/scripts ~/.local/bin/scripts
cd ~/.local/bin
ls
cd scripts
ls
cp scripts/* ./
ls
ln -sv $PWD/rm_neovim.sh ~/.local/bin/rm_neovim
clear
cd ~/.local
ls
paru -R neovim
paru -R neovim nvim-packer-git
cd src
ls
cd neovim
ls
nvbuild
cd ~/github.com/sorbetofbeef
ls
cd create-project
cd ..
ls
cd build-nvim
ls
python -m venv ./venv
ls
source venv/bin/activate
ls
pip install colorama
clear
q
paru -S wl-clipboard
q
sudo npm install --global neovim
sudo pip install neovim
sudo paru -S python-neovim-git
paru -S python-neovim-git
paru -S python-pynvim
clear
q
nvbuild
nvim
nvim -c checkhealth
neomutt
neomutt
op
op account get
pinentry-gnome3
paru -S gcr
clear
pinentry-gnome3
clea
clear
ls
l
cd .gnupg
ls
gpg --full-generate-key --expert
clear
q
exec dbus-launch --exit-with-session Hyprland
neomutt
neomutt
pinentry-gnome3
l /usr/bin/pinentry
cat /usr/bin/pinentry
sudo nvim /usr/bin/pinentry
pinentry
paru -S polkit-gnome
exit
exec dbus-launch --exit-with-session Hyprland
htop
nvim ~/.config/hypr/scripts/process.sh
q
cd /usr/lib/polkit-gnome
ls
q
exec dbus-launch --exit-with-session Hyprland
neomutt
q
htop
q
paru -S libpulse
paru -S river
paru -S river stacktile
clear
q
exec dbus-launch --exit-with-session river
paru -S kanshi
q
dbus-update-activation-environment --help
q
htop
nvim ~/.config/river/process.sh
q
exec dbus-launch --exit-with-session river
nvim ~/.config/pipewire/pipewire.conf
q
htop
paru -S swww
htop
systemctl --user enable pipewire.service
systemctl --user enable pipewire-pulse.service
alsamixer
q
mkdir -p media/pics/wp
f
q
nvim ~/.config/river/process.sh
q
exec dbus-launch --exit-with-session river
htop
swww img media/pics/wp/mononoke_wp.jpg
q
q
alsamixer
paru -S pulseaudio
paru -S pulseaudio-ctl
paru -S pulsemixer
q
paru -S alsa-firmware alsa-lib
systemctl list
systemctl list-unit
systemctl list-units
systemctl status
q
pactl help
pactl list
pactl list
pactl list | rg -i sink
nvim ~/.config/river/bindings
q
printenv | rg -i xinput
q
alsamixer
pulsemixer
q
sudo nvim /etc/mkinitcpio.conf
q
mkdir /etc/cmdline.d/
sudo mkdir /etc/cmdline.d/
sudo touch /etc/cmdline.d/{root.conf,security.conf
f
sudo rm {\{root.conf\,security.conf
ls
sudo rm \{root.conf,security.conf
sudo nvim root.conf security.conf
cd /etc/mkinitcpio.conf.d
ls
ls
cd ..
ls
sudo nvim mkinitcpio.conf
ls
cd mkinitcpio.d
ls
nvim linux.preset
sudo nvim linux.preset
sudo mkdir /boot/EFI/Linux
mkinitcpio -p linux
sudo mkinitcpio -p linux
ls /boot/EFI/Linux/
sudo nvim linux.preset
sudo mkinitcpio -p linux
efibootmgr -c -d /dev/nvme0n1 -p 1 -L "ARRRCH" -l 'EFI\Linux\arch-linux.efi --unicode
efibootmgr -c -d /dev/nvme0n1 -p 1 -L "ARRRCH" -l 'EFI\Linux\arch-linux.efi' --unicode
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L "ARRRCH" -l 'EFI\Linux\arch-linux.efi' --unicode
clear
q
sudo mkinitcpio -P
paru -S linux-firmware
paru -S sof-firmware
sudo mkinitcpio -P
q
exec dbus-launch --exit-with-session river
clear
ls
q
f
q
dmesg --color=always | less -R
sudo dmesg --color=always | less -R
q
f
tar -xf sof-2.2.6.tar.gz
ls
cd sof-2.2.6/
ls
bat README.md
ls
cd installer
ls
ls
cat README.md
q
pulsemixer
alsamixer
lsmod
q
sudo nvim /etc/mkinitcpio.conf
sudo mkinitcpio -p linux
q
f
exec dbus-launch --exit-with-session river
iwctl
q
iwctl
q
iwctl
q
alsamixer
sudo dmesg --color=always | less -R
sudo modprobe --remove snd-sof-pci-intel-tgl
sudo modprobe snd-sof-pci-intel-rpl
f
sudo modprobe snd-sof-pci-intel-tgl
ls
paru -S fwupd
sudo systemctl status
q
paru -S bluez bluez-utils 
lsmod
lsmod | btusb
lsmod | rg -i btusb
sudo systemctl enable bluetooth.service
sudo usermod -a -G lp me
cat /etc/group
sudo systemctl start bluetooth.service
bluetoothctl
q
f
q
dmesg
sudo dmesg
q
alsamixer
alsamixer
pulsemixer
q
pulsemixer
mkdir kernelbuild
cd kernelbuild
tar -xf ~/dl/linux-6.4.3.tar.xz
l
cd linux-6.4.3
ls
l
cd ..
chown -vR $USER:$USER linux-6.4.3
cd linux-6.4.3
make mrproper
paru -S base-devel
paru -S xlmto kmod inetutils bc libelf gt cpio perl tar xz
paru -S xmlto kmod inetutils bc libelf git cpio perl tar xz
make mrproper
paru -S modprobed-db
paru -S modprobed-db
q
ls /boot
f
q
modprobed-db
modprobed-db store
modprobed-db list
nvim ~/.config/modprobed.db
modprobed-db store
cd ~/kernelbuild
cd linux-6.4.3
ls
zcat /proc/config.gz > .config
make menuconfig
q
f
ls
sudo mkdir -p /lib/firmware/intel/avs-tplg
ln -sv /lib/firmware/intel/sof-v2.2.6/* /lib/firmware/intel/avs/
sudo ln -sv /lib/firmware/intel/sof-v2.2.6/* /lib/firmware/intel/avs/
sudo ln -sv /lib/firmware/intel/sof-tplg-v2.2.6/* /lib/firmware/intel/avs-tplg
cd /etc/modprobe.d
ls
sudo nvim ./sof-ipc4-override.conf
q
sudo nvim /etc/mkinitcpio.conf
sudo mv /etc/modprobe.d/sof-ipc4-override.conf ./
ls
mkdir -p archive/kernel
sudo mv sof-ipc4-override.conf archive/kernel
q
f
sudo mkinitcpio -p linux
q
sudo nvim /etc/mkinitcpio.conf
sudo mkinitcpio -p linux
efibootmgr
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L 'ARCH' -l'\EFI\Linux\arch-linux.efi' --unicode
sudo efibootmgr --help
sudo efibootmgr -B 0008
sudo efibootmgr -B -b 0008
sudo efibootmgr -B -b 0000
sudo pacman -Syyu
f
clear
sudo efibootmgr
q
htop
systemctl --user enable wireplumber@.service
systemctl --user enable wireplumber
q
q
f
q
htop
clear
exec dbus-launch --exit-with-session river
alsamixer
dmesg --color=always | less -R
sudo dmesg --color=always | less -R
lsmod
sudo modprobe --all
sudo modprobe -h
sudo lsmod -h
sudo lsmod
sudo modprobe snd_soc_sof_rpl
cd /lib/modules/6.4.3-arch1-2
ls
l
f
lsmod
sudo dmesg --color=always | less -R
q
du /boot
du -h /boot
du -h /boot/EFI/Linux
du -h /boot/EFI/Linux/arch-linux
du -h /boot/EFI/Linux/arch-linux64.efi
f
sudo lf
ls
l
cd ..
ls
q
sudo modprobe -a snd-sof-pci-intel-apl
lsmod
sudo modprobe -a snd-sof-pci-intel-tgl
lsmod
sudo modprobe -r snd-sof-pci-intel-tgl
sudo modprobe -r snd-sof-pci-intel-apl
sudo modprobe snd-sof-pci-intel-tgl
clear
paru -S alsa-firmware
paru -S linux-firmware
paru -S linux-headers
sudo nvim /etc/mkinitcpio.d/linux.preset
f
cd ~/kernelbuild/linux-6.4.3
zcat /proc/config.gz > .config
nvim .config
make LSMOD=$HOME/.config/modprobed.db localmodconfig
make meuconfig
make menuconfig
make LSMOD=$HOME/.config/modprobed.db localmodconfig
make menuconfig
make -j16
make modules
sudo make modules_install
make LSMOD=$HOME/.config/modprobed.db localmodconfig
make menuconfig
make -j16
clear
cp -v arch/x86/boot/bzImage /boot/vmlinuz-linux64
sudo cp -v arch/x86/boot/bzImage /boot/vmlinuz-linux64
sudo cp -v /etc/mkinitcpio.d/linux.preset /etc/mkinitcpio.d/linux64.preset
sudo nvim /etc/mkinitcpio.d/linux64.preset
sudo nvim /etc/mkinitcpio.conf
mkinitcpio -p linux64
sudo mkinitcpio -p linux64
sudo nvim /etc/mkinitcpio.conf
f
sudo mkinitcpio -p linux64
efibootmgr -c -d /dev/nvme0n1 -p 1 -L'ARCH64' -l '\EFI\Linux\arch-linux64.efi' --unicode
sudo efibootmgr -c -d /dev/nvme0n1 -p 1 -L'ARCH64' -l '\EFI\Linux\arch-linux64.efi' --unicode
q
ls
cd kernelbuild
make menuconfig
ls
cd linux-6.4.3
make menuconfig
make -j16
make modules
ls
sudo cp System.map /boot/System.map-linux64
sudo cp -v arch/x86_64/boot/bzImage /boot/vmlinuz-linux64
sudo mkinitcpio -p linux64
clear
exit
clear
ls
cd kernelbuild
ls
cd linux-6.4.3
ls
clear
make localmodconfig
make menuconfig
modprobed-db store
ls
l
whoami
modprobed-db --help
nvim ~/.config/modprobed-db.conf
clear
ls
exit
echo "exec dbus-launch --exit-with-session river" >> .local/bin/start && chmod -v +x .local/bin/start
exec start
sudo modprobe -r snd_sof_pci_intel_tgl
sudo modprobe snd_sof_pci_intel_tgl
lsmod
q
iwctl
sudo iwctl
sudo systemctl stop iwd.service
sudo systemctl start iwd.service
sudo iwctl
q
journalctl tty
journalctl tty%
journalctl /dev/tty
journalctl /dev/tty0
journalctl /dev/tty1
journalctl _SYSTEMD_USER_UNIT
journalctl --help
journalctl --user
journalctl --system
exec start
nvim /lib/modules/6.4.36.4.3-user
sudo nvim /lib/modules/6.4.36.4.3-user
exec start
clear
sudo pacman -Syyu
paru -Syyu
q
paru -S sof-firmware
paru -S sof-tools
paru -Ss sof-tools
paru -Si sof-tools
q
htop
systemctl --user start 
systemctl --user start waybar.service
journalctl -xe
sudo dmesg --color=always | less -R
sudo dmesg --color=always | less -R
sudo nvim /etc/cmdline.d/audit.conf
sudo nvim /etc/modules-load.d/
sudo nvim /etc/modprobe.d/
sudo mkinitcpio -M
sudo mkinitcpio -v
sudo dmesg --color=always | less -R
sudo rmmod snd_sof_pci_intel_tgl
lsmod
sudo modprobe snd_sof_pci_intel_tgl
lsmod
q
fwupdmgr
fwupdmgr --help
fwupdmgr get-devices
sudo nvim /etc/fwupd/fwupd.conf
fwupdmgr refresh
sudo nvim /etc/fstab
sudo fwupdmgr refresh
paru -S udisks2
sudo mv -v /etc/mkinitcpio.d/linux64.preset ~/archive/kernel
clear
mkinitcpio
mkinitcpio -p
mkinitcpio -p linux
sudo mkinitcpio -p linux
lsblk
mount
sudo nvim /etc/fwupd/uefi_capsule.conf
sudo systemctl restart fwupd
sudo fwupdmgr refresh
sudo fwupdmgr refresh --force
fwupdmgr refresh --force
fwupdmgr get-devices
fwupdmgr get-updates
fwupdmgr update
fwupdmgr install
man fwupdmgr
q
f
sudo cp -v ~/dl/XPS_9320_2_4_0.exe ./
clear
q
sudo dmesg --color=always | less -R
clear
exec start
sudo nvim /etc/mkinitcpio.conf
sudo mkinitcpio -p linux
clear
sudo reboot
sudo dmesg --color=always | less -R
clear
exec start
sudo rmmod snd_sof_pci_intel_tgl; sudo modprobe snd_sof_pci_intel_tgl
clear
htop
sudo pacman -R xdg-desktop-portal-hyprland
sudo pacman -S xdg-desktop-portal-wlr
paru -S kora-icon-theme-git dracula-gtk-theme
clear
paru -S ttf-roboto ttf-ubuntu-font-family
reflector -h
sudo reflector -c US -l 8 -f 5 --sort rate,age,score,delay,country --save /etc/pacman.d/mirrorlist
sudo reflector -c US -l 8 -f 5 --sort rate --save /etc/pacman.d/mirrorlist
ls
sudo pacman -Syyu
paru -Syyu
q
nvim ~/.local/bin/1p
nvim ~/.local/bin/1p
q
chmod +x ~/.local/bin/1p
q
exec start
sudo rmmod snd_sof_pci_intel_tgl; sudo modprobe snd_sof_pci_intel_tgl
htop
sudo systemctl enable dbus-broker.service
systemctl --user enable dbus-broker.service
systemctl --user enable wireplumber
systemctl --user enable mako.service
systemctl --user start mako.service
systemctl --user start waybar.service
exec start
dbus-broker-launch --help
man dbus-broker-launch
nvim ~/.local/bin/start 
systemctl --user disable dbus-broker.service
q
htop
exec start
start
nvim ~/.local/bin/start
exec start
start
dbus-broker-launch --help
man dbus-broker
dbus-broker-launch -- river
dbus-broker-launch 
exec river
htop
systemctl --user enable dbus-broker.service
nvim ~/.local/bin/start
nvim .local/bin/start
nvim .local/bin/start
nvim .local/bin/start
q
exec start
nvim .local/bin/start
exec start
htop
q
nvim ~/github.com/sorbetofbeef/create-project
f
gh repo clone mac_data
ls
cd mac_data/
ls
cd share
ls
git branch
git fetch --all
git branch
cd ..
cd ..,
cd ..
gh repo clone datafiles
cd datafiles
ls
cd share
ls
cd ../
cd bin
ls
cd scripts
ls
cd
cd .local/src/datafiles
git fetch --all
git branch
cd ..
rm mac_data datafiles
rm -rf mac_data datafiles
cd ../share
ls
rustup default stable
rustup update
clear
ls
cd pmt
ls
touch create-project.jsopn build-neovim.json
nvim create-project.jsopn
mv create-project.jsopn create-project.json
nvim create-project.json
f
q
pmt
cd github.com/sorbetofbeef/create-project
source venv/bin/activate
pip3 install colorama
venv/bin/pip3 install colorama
venv/bin/pip install colorama
venv/bin/pip install colorama
deactivate
venv/bin/pip3 install colorama
sudo pacman -S python-pipx
q
f
ln -svf /usr/bin/pydoc3.11 $PWD/python
ln -svf /usr/bin/python3.11 $PWD/python
f
cd ../../
source venv/bin/activate
venv/bin/pip3.11 install colorama
q
q
f
q
pmt
mkdir ~/.config/pmt/
touch /home/me/.config/pmt/config.sh
nvim ~/.config/pmt/config.sh
pmt
nvim ~/github.com/sorbetofbeef/create-project
q
pmt
pmt
pmt
pmt
pmt
q
pmt
pmt
pmt
pmt
pmt
cd ~/workspace/
ls
l
cat .current_project.json
pmt
clear
f
pmt
cd
nvim github.com/sorbetofbeef/create-project/core.py
bat ~/workspace/.current_project.json
nvim ~/.local/share/pmt/projects/all.json
q
pmt
pmt
pmt
pmt
pmt
pmt
pmt
pmt
nvim ~/.local/share/pmt/projects/all.json
pmt
bat ~/.local/share/pmt/projects/all_projects.json
ls
pmt
f
pmt
bat all_projects.json
bat ~/.local/share/pmt/projects/all_projects.json
nvim ~/.local/share/pmt/projects/all_projects.json
q
bat ~/.local/share/pmt/projects/all_projects.json
q
pmt
nvim ~/.local/share/pmt/projects/all_projects.json
pmt
bat ~/.local/share/pmt/projects/all_projects.json
n
pmt
bat ~/.local/share/pmt/projects/all_projects.json
pmt
pmt
rm -rf github.com/sorbetofbeef/test
ls github.com/sorbetofbeef
pmt
q
pmt
gh repo delete --yes test
gh auth refresh -h github.com -s delete_repo
pmt
q
gh repo clone cocktail-codex
cd cocktail-codex
ls
git submodule update --init
cd cocktail-codex-go.backend
ls
l
git status
git config --global init.defaultBranch master
git -C ~/cocktail-codex submodule status
git switch master
ls
git branch -m main
git switch main
l
cd ../cocktail-codex-react.frontend
ls
git switch react-dom
ls
q
pmt
pmt
pmt
pmt
pmt
pmt
pmt
pmt
pmt
pmt
pmt
nvim ~/.local/share/pmt/projects/all_projects.json
pmt
pmt
pmt
pmt
pmt
pmt
pmt
bat ~/.local/share/pmt/projects/test.json
clear
pmt
pmt
rm -rf github.com/sorbetofbeef/cocktail-codex/
nvim ~/.local/share/pmt/projects/all_projects.json
pmt
pmt
bat .local/share/pmt/projects/create-project.json
pmt
pmt
q
paru -S typescript-language-server
q
go mod tidy
exit
yarn install
q
pmt
nvim ~/.local/share/pmt/projects/create-project.json
pmt
nvim ~/.local/share/pmt/projects/create-project.json
pmt
nvim ~/.local/share/pmt/projects/create-project.json
pmt
clear
nvim ~/workspace/current_project
paru -S jetbrains-toolbox
paru -S postgresql
paru -S tcl
q
mkdir -p .local/var/lib/postgres
mkdir -p .local/var/logs/postgres
f
q
pg_ctl init -D ~/.local/var/lib/postgres --log=~/.local/var/logs/postgres/postgres.log
pg_ctl -D .local/var/lib/postgres -l ~/.local/var/logs/postgres start
pg_ctl -D .local/var/lib/postgres -l ~/.local/var/logs/postgres/postgres.log start
bat ~/.local/var/logs/postgres/postgres.log
sudo mkdir /run/postgresql/
sudo chown me:me /run/postgresql
clear
ls
pg_ctl -D .local/var/lib/postgres -l ~/.local/var/logs/postgres/postgres.log start
createdb --owner me cocktails
q
pg_ctl status
cd github.com/sorbetofbeef/cocktail-codex/cocktail-codex-postgresql.db
ls
l
cd sql
ls
l
cat .project
cd ..
ls
car cocktails_dump.sql
bat cocktails_dump.sql
bat export_202304271446.sql 
bat newDB.sql
nvim newDB.sql 
pg_restore newDB.sql
pg_restore -d cocktail -f newDB.sql
pg_restore -f newDB.sql
pg_restore --help
pg_restore -d cocktails
pg_restore -d cocktails newDB.sql
psql -U me -d cocktails < newDB.sql
psql -U me
psql
psql
psql postgres me
psql cocktails me
psql postgres me
psql --command='create database cocktails"
psql --command='create database cocktails'
psql root me --command='create database cocktails'
psql cocktails me < ./newDB.sql
nvim github.com/sorbetofbeef/cocktail-codex/cocktail-codex-postgresql.db/newDB.sql
psql postgres me 
dropdb cocktails
createdb --owner me cocktails
psql cocktails me < github.com/sorbetofbeef/cocktail-codex/cocktail-codex-postgresql.db/newDB.sql
neomutt
q
sudo pacman -Syyu
sudo pacman -Syyu
paru -Syyu
paru -S w3m
q
f
q
systemctl --user enable swaync.service
q
htop
q
paru -S gtklock
paru -S swayidle
paru -S gtklock
paru -S swaync
q
gtklock --help
gtklock
paru -S qutebrowser-qt6-git
paru -S gtk-theme-elementary
paru -S gtk-theme-elementary python-adblock
q
f
q
nvim ~/.config/river/init
q
exec start
firefox
q
gtklock
q
exec Hyprland
htop
gtklock
nvim ~/.config/hypr/hyprland.conf
swaync
pkill mako
swaync
paru -S libnotify
paru -S libnotifymm
q
notify-send hello
q
alsamixer
swaync
sudo systemctl disable dbus-broker.service
sudo systemctl stop dbus-broker.service
clear
htop
sudo systemctl enable dbus
sudo reboot
htop
sudo systemctl --user disable dbus-broker.service
sudo systemctl --user stop dbus-broker.service
htop
sudo systemctl --user stop dbus-broker.service
htop
sudo systemctl enable dbus-broker.service
sudo systemctl start udisks2.service
sudo systemctl enable udisks2.service
htop
htop
exec start
sudo htop
exec start
gtklock
htop
systemctl --user start waybar.service
systemctl --user enable waybar.service
q
exec start
lsmod
q
q
f
q
swaync
f
lw
ls
paru -R xdg-desktop-portal-wlr 
c
q
paru -S hyprland xdg-desktop-portal-hyprland
q
waybar
systemctl --user disable mako.service waybar.service
nvim ~/.config/river/process.sh
q
nvim ~/.local/bin
c
exec start
ls
nvim ~/.config/hypr/hyprland.conf
q
exec start
htop
q
nvim ~/.config/hypr/hyprland.conf
nvim ~/.config/hypr/hyprland.conf
nvim ~/.config/hypr/scripts/process.sh
q
paru -S bibata-extra-cursor-theme
f
q
notify-send hey
swaync-client --open-panel
q
gtklock
q
gsettings set org.gnome.desktop.interface cursor-theme "Bibata-Modern-Turquoise"
gsettings set org.gnome.desktop.interface cursor-theme "Bibata-Modern-DodgerBlue"
q
q
nvim ~/.config/hypr/scripts
q
gtklock
hhhq
q
nvim ~/.config/hypr/hyprland.conf
q
exec start
swww img media/pics/wp/mononoke_wp.jpg
q
swayidle --help
man swayidle
hyprctl --help
hyprctl dispatch --hekp
clear
f
q
q
q
q
q
q
q
q
q
q
q
q
swayidle -w time 5 'gtklock' \ 
swayidle -w time 5 'gtklock' \ 
swayidle -w timeout 5 'gtklock' \\
timeout 10 'hyprctl dispatch monitor current dpms off' \\
resume 'hyprctl dispatch monitor current dpms on' \\
before-sleep 'gtklock'
swayidle -w timeout 5 'gtklock' \\
timeout 10 'hyprctl dispatch dpms off' \\
resume 'hyprctl dispatch dpms on' \\
before-sleep 'gtklock'
swayidle -w timeout 5 'gtklock' \\
timeout 7 'hyprctl "dispatch dpms off"' \\
resume 'hyprctl "dispatch dpms on"' \\
before-sleep 'gtklock'
swayidle -w timeout 600 'gtklock' \\
timeout 1200 'hyprctl dispatch dpms off"' \\
resume 'hyprctl dispatch dpms on"' \\
before-sleep 'gtklock'
echo "swayidle -w \timeout 600 'gtklock' \\
timeout 1200 'hyprctl dispatch dpms off' \\
resume 'hyprctl dispatch dpms on' \\
before-sleep 'gtklock'"
echo "swayidle -w \timeout 600 'gtklock' \\
timeout 1200 'hyprctl dispatch dpms off' \\
resume 'hyprctl dispatch dpms on' \\
before-sleep 'gtklock'" >> ~/.local/bin/screen-timeout.sh
nvim ~/.local/bin/screen-timeout.sh 
gtklock --help
gtklock --help-a;;
gtklock --help-all
man gtklock
nvim ~/.config/hypr/hyprland.conf
q
q
exec start
q
q
q
nvim ~/.config/hypr/hyprland.conf
q
nvim ~/.config/hypr/hyprland.conf
paru -S rose-pine-gtk-theme
nvim ~/.config/hypr/hyprland.conf
q
f
q
exec start
q
nvim ~/.config/environment.d/dark_mode.sh
q
exec start
rm .cache/kitty
rm -rf .cache/kitty
exit
exec start
nvim
q
nvim
nvim ~/.config/kitty
q
q
nvim ~/.config/hypr/hyprland.conf
q
q
exec start
ls
nvim
nvim ~/.config/nvim/lua/user/themes/kanagawa.lua
nvim ~/.config/environment.d/dark_mode.sh
q
rm -rf ~/.cache/kitty
q
exec start
q
nvim ~/.config/environment.d/dark_mode.sh
q
nvim
nvim
q
nvim
q
nvim
q
q
rm -rf .cache/kitty
q
q
exec start
nvim ~/.config/hypr/hyprland.conf
q
paru -S kanagawa-gtk-theme-git
paru -S bibata-cursor-theme bibata-cursor-translucent
f

exec start
pulsemixer
clear
nvim
q
q
f
f
q
gtklock
q
neomutt
bluetoothctl
bluetoothctl
q
q
clear
q
q
f
q
ls
f
q
ls
f
q
nvim ~/.config/wofi/style.css.bak
pwofi --hel
wofi --help
nvim ~/.config/wofi/style.css.bak
q
nvim ~/.config/wofi/style.css
q
nvim ~/.config/wofi/config
q
man wofi-config
man wofi
man 7 wofi
man wofi
q
sudo pacman -Up
sudo pacman -Up -h
sudo pacman -Quq
sudo pacman -Quq | wc -l
pacman -Quq
pacman -Qu
pacman -Q
pacman -Q | wc -l
paru -Quq | wc -l
paru -Quq
sudo pacman -Syyuc
sudo pacman -Sc
sudo pacman -Sc --noconfirm
sudo pacman -Sc --noconfirm 2&> /dev/null
sudo pacman -Sc --noconfirm > /dev/null
sudo pacman -Sc --noconfirm 2> /dev/null
sudo pacman -Sc --noconfirm 2& && > /dev/null
sudo pacman -Sc --noconfirm 2&> > /dev/null
sudo pacman -Sc --noconfirm &2>  /dev/null
man zsh
man bash 
sudo pacman -Sc --noconfirm &2> /dev/null
man bash 
sudo pacman -Sc --noconfirm &> /dev/null
q
kanshi --help
sudo pacman -Syyu && paru -Syyu --aur
nvim ~/.config/zsh/functions/pup
q
pup
if [[ $(paru -Quq | wc -l) -gt 0 ]]; then\
paru -Qu\
fi
if [[ $(paru -Quq | wc -l) -gt 0 ]]; then\
printf 'nothing'\
else\
fi
if [[ $(paru -Quq | wc -l) -gt 0 ]]; then\
printf 'nothing'\
else\
fi
if [[ $(paru -Quq | wc -l) -gt 0 ]]; then\
printf 'nothing'\
else\
printf 'something'\
fi
pup
q
pup
nvim ~/.config/zsh/functions/pup
q
pup
nvim ~/.config/zsh/functions/pup
q
psearch gtk
psearch gtk breeze
pkgs=(gtk breeze)
paru -Ss "${pkgs[*]}"
paru -Ss "${pkgs[$*]}"
paru -Ss ${pkgs[*]}
paru -Ss "${pkgs[@]}"
q
pup
alias
nvim ~/.config/zsh/functions/init_ide
nvim ~/.config/zsh/functions/_common_aliases
nvim ~/.config/zsh/functions/_port_aliases
nvim ~/.config/zsh/functions/_port_aliases
q
paru -Ss gtk
paru -Ssq
paru -Ssq gtk
paru -Ssv gtk
paru -Ssv --color=always gtk 
paru -Ssv --color=always gtk || bat
paru -Ssv --color=always gtk || bat --pager
bat -h
paru --colo=always -Ss gtk bat --color always --paging always
paru --colo=always -Ss gtk | bat --color always --paging always
paru --color=always -Ss gtk | bat --color always --paging always
paru -Rcnsuv foot
paru -Sv foot
q
f
q
psearch gtk themes
padd vimix-gtk-themes
padd gtk-engine-murrine gtk-engines vimix-cursors vimix-icon-theme
clear
gsettings set org.gnome.desktop.interface vimix-compact-doder
gsettings set org.gnome.desktop.interface gtk-theme vimix-compact-doder
export GTK_THEME=vimix-compact-doder
gsettings set org.gnome.desktop.interface gtk-theme vimix-compact-doder
dconf
dconf update
dconf dump
dconf dump /org/gnome/desktop/interface/
q
q
f
q
nvim ~/.config/hypr/scripts/process.sh
q
sudo dmesg --color=always | less -R
c
exec start
gsettings set org.gnome.desktop.interface font-antialiasing subpixel
gsettings set org.gnome.desktop.interface font-antialiasing 3
gsettings set org.gnome.desktop.interface font-antialiasing 2
gsettings set org.gnome.desktop.interface font-antialiasing true
gsettings set org.gnome.desktop.interface font-antialiasing 1
gsettings describe org.gnome.desktop.interface font-antialiasing
gsettings set org.gnome.desktop.interface font-antialiasing rgba
gsettings get org.gnome.desktop.interface 
gsettings get org.gnome.desktop.interface toolbar-style
gsettings get org.gnome.desktop.interface toolbar-icons-size
gsettings describe org.gnome.desktop.interface toolbar-icons-size
gsettings set org.gnome.desktop.interface toolbar-icons-size small
gsettings get org.gnome.desktop.interface menubar-accel 
gsettings describe org.gnome.desktop.interface menubar-accel 
gsettings describe org.gnome.desktop.interface menus-have-tearoff
gsettings get org.gnome.desktop.interface menus-have-tearoff
gsettings describe org.gtk.Settings.FileChooser startup-mode
gsettings describe org.gnome.desktop.a11y.interface high-contrast
gsettings describe org.gnome.desktop.interface scaling-factor
gsettings describe org.gnome.desktop.wm.preferences theme vimix-compact-doder
gsettings set org.gnome.desktop.wm.preferences theme vimix-compact-doder
gsettings get org.gnome.desktop.wm.preferences button-layout
gsettings set org.gnome.desktop.wm.preferences button-layout "close,max,min:appmenu"
gsettings set org.gnome.desktop.wm.preferences button-layout "close max min:appmenu"
gsettings set org.gnome.desktop.wm.preferences button-layout "close:appmenu"
gsettings set org.gnome.desktop.wm.preferences button-layout "close:spacer,appmenu"
gsettings set org.gnome.desktop.wm.preferences button-layout "spacer,close:appmenu"
gsettings set org.gnome.desktop.wm.preferences button-layout "close:appmenu"
nvim ~/.config/hypr/scripts/process.sh
q
gsettings get org.erikreider.swaync dnd-state
gsettings list-schemas 
gsettings describe org.gnome.desktop.wm.preferences button-layout
f
exec start
htop
q
psearch lilex
psearch lilex
psearch nerd-fonts-meta
padd nerd-fonts-meta
sudo fc-cache -frv
kitty list-fonts
q
nvim ~/.config/kitty/kitty.conf
q
ls
gtklock
clear
swaync -h
man swaync
man swaync-client
q
nvim ~/.config/waybar/config
q
ls
nvim ~/.config/kitty/kitty.conf
q
ls
nvim ~/.config/kitty/kitty.conf
q
yarn install
yarn add -D @tanstack/react-query-devtools
cargo install ncspot
ncspot
op item get -h
op item get Spotify
op item get Spotify
op item get --fields --label=username Spotify 
op item get --fields username Spotify 
op item get --fields password Spotify 
nvim ~/.config/ncspot/config.toml
q
ncspot
q
f
q
nvim ~/.config/nvim/lua
q
nvim ~/.config/nvim
q
nvim ~/.config/nvim
q
nvim ~/.config/nvim/
f
nvbuild
nvim
q
f
f
f
q
htop
q
nvim ~/.config/systemd/user/graphical-session.target.wants
q
nvim ~/.config/waybar/style.css
q
exec start
journalctl -xe
journalctl -xe
c
f
ln -svf $PWD /home/me/.config/systemd/user/graphical-session.target.wants/waybar.service
ln -svf $PWD/waybar.service /home/me/.config/systemd/user/graphical-session.target.wants/waybar.service
ls /home/me/.config/systemd/user/graphical-session.target.wants/
unlink /home/me/.config/systemd/user/graphical-session.target.wants/waybar.service/
unlink /home/me/.config/systemd/user/graphical-session.target.wants/waybar.service
ln -svf $PWD/waybar.service /home/me/.config/systemd/user/graphical-session.target.wants/waybar.service
clear
q
nvim ~/.config/hypr/scripts/process.sh
htop
q
exec start
sudo nvim /usr/lib/systemd/user/waybar.service
sudo nvim /etc/systemd/user/hyprland-session.target
nvim .config/hypr/scripts/process.sh
q
printenv | rg -i wayland
systemctl list-automounts
systemctl list-automounts --all
systemctl list-dependencies
systemctl --user list-dependencies
systemctl --user --all list-dependencies
systemctl --user status
systemctl --user show-environment
nvim 
q
systemctl --user show-environment
printenv | rg -i hypr
printenv | rg -i sock
printenv 
q
exec start
nvim ~/.config/hypr/hyprland.conf
nvim ~/.config/hypr/hyprland.conf
exec start
htop
q
nvim ~/.config/waybar/config
nvim ~/.config/hypr/hyprland.conf
c
exec start
htop
journalctl -xe
clear
nvim ~/.local/bin/start
exec start
notify-send hello
swaync-client -t -sw
vim ~/.config/waybar/config 
nvim ~/.config/waybar/config 
q
exec start
padd google-chrome
padd gnome-keyring
padd gtk4 gtk4-layer-shell
clear
q
padd gtk4
clear
nvim /etc/xdg/waybar/config 
ncspot
q
padd jq socat
c
q
journalctl -xe
journalctl -xe
q
exec start
journalctl -xe
htop
q
htop
sudo nvim /usr/share/applications/google-chrome.desktop
q
sudo update-desktop-database
sudo update-desktop-database /usr/share/applications/
sudo update-desktop-database /usr/share/applications/*
sudo update-desktop-database -h
sudo update-desktop-database /usr/share/applications/google-chrome.desktop
sudo update-desktop-database -v /usr/share/applications
htop
nvim ~/.local/share/applications/chromium.desktop
update-desktop-database -v ~/.local/share/applications
q
google-chrome-stable
google-chrome-stable $(cat ~/.config/electron-flags.conf)
cat ~/.config/electron-flags.conf
q
exec start
pkill Xwayland
htop
swww img /home/me/media/pics/wp/mononoke_wp.jpg
nvim ~/.config/nvim
nvim ~/.config/nvim
cd
f
nvim
nvim
nvim --headless "+call firenvim#install(0) | q"
nvim
nvim
nvim
nvim
nvim
nvim ~/.config/hypr/hyprland.conf
f
q
nvim ~/.config/hypr/hyprland.conf 
q
f
paru -S gdb ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite xorg-xinput libxrender pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio
auso pacman -gdb ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite xorg-xinput libxrender pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio
paru -S gdb ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite xorg-xinput libxrender pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio
cd ~/.local/src
gh repo clone hyprwm/Hyprland -- --recursive
cd Hyprland
prm hyprland
paru -S gdb ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite xorg-xinput libxrender pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio
prm xorg-xwayland
paru -S gdb ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite xorg-xinput libxrender pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm libinput libliftoff libdisplay-info cpio
make 
git submodule update --init
make cleaninstall
make cleaninstall NO_XWAYLAND
rm build
rm -rf build
ls
bat CMakeLists.txt
make NO_XWAYLAND 
sudo make NO_XWAYLAND install
sudo make install NO_XWAYLAND 
cd ~/.local/src
rm -rf Hyprland
sudo rm -rf Hyprland
gh repo clone hyprwm/Hyprland -- --recursive
make clear && sudo make config && make protocols
cd Hyprland
make clear && sudo make config && make protocols
q
padd hyprland
q
nvim ~/.config/hypr/hyprland.conf 
exec start
nvim ~/.config/hypr/scripts/process.sh
q
nvim ~/.config/hypr/scripts
q
f
exec start
q
printf 'export ELECTRON_FLAGS=%s' $(cat ~/.config/electron-flags.conf) >> ~/.config/zsh/.zshenv
clear
nvim ~/.config/zsh/.zshenv
q
sudo nvim /usr/share/applications/google-chrome.desktop
q
sudo update-desktop-database -v /usr/share/applications
clear
gtk-query-settings -h
q
exec start
q
journalctl -xe
nvim ~/.config/waybar/config 
q
paru -Ss hciattach-rpi3
paru -Ss hc-utils
paru -Ss hcxdumptool
paru -Ss hcx
psearch bluez-hciconfig
psearch bluez-firmware
padd bluez-firmware
sudo reboot
exec start
padd tofi
padd rofi
rofi
padd rofi-1pass
prm rofi
clear
padd libnotify
padd libnotifymm
padd notification-daemon
sudo nvim /usr/share/dbus-1/services/org.freedesktop.Notifications.service
dbus-broker -h
c
l
f
ls
sudo ln -s $PWD/org.erikreider.swaync.service $PWD/org.freedesktop.Notifications.service
q
exec start
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
xdg-settings -h
xdg-settings --help
xdg-settings --list
xdg-settings check default-web-browser
xdg-settings check default-web-browser --help
xdg-settings --manual
xdg-settings get default-web-browser
man update-desktop-database 
xdg-open .local/share/applications/google-crome.desktop
.local/share/applications/google-crome.desktop
chmod +x ~/.local/share/applications
.local/share/applications/google-crome.desktop
chmod -v +x ~/.local/share/applications/*.desktop
./.local/share/applications/google-crome.desktop
q
f
update-desktop-database -v
for file in ./*.desktop; doln -svf $PWD/
for file in ./*.desktop; do\
ln -sv $file /usr/local/share/applications/${file##*/}\
done
for file in ./*.desktop; do\
sudo ln -sv $file /usr/local/share/applications/${file##*/}\
done
sudo update-desktop-database
for file in ./*.desktop; do\
sudo cp -v $file /usr/local/share/applications/${file##*/}\
done
cat
l
l ..
unlink /usr/local/share/applications/*
unlink /usr/local/share/applications/Alacritty.desktop
for file in ./*.desktop; do\
sudo unlink -v $file /usr/local/share/applications/${file##*/}\
done
for file in ./*.desktop; do\
sudo unlink /usr/local/share/applications/${file##*/}\
done
l /usr/local/share/applications
for file in ./*.desktop; do\
sudo cp -v $file /usr/local/share/applications/${file##*/}\
done
sudo update-desktop-database
sudo update-desktop-database -v
bat /usr/share/applications/notification-daemon.desktop 
padd desktop-file-utils
desktop-file-validate ~/.local/share/applications
desktop-file-validate ~/.local/share/applications/google-crome.desktop
desktop-file-validate -v ~/.local/share/applications/google-crome.desktop
desktop-file-validate -h ~/.local/share/applications/google-crome.desktop
for file in ./*.desktop; do\
desktop-file-validate $file\
done
update-desktop-database -v ~/.local/share/applications
q
f
sudo xdg-settings set --help
sudo xdg-settings --list
sudo xdg-settings set default-web-browser chrome.desktop true
sudo xdg-settings set default-web-browser chrome.desktop true --manual
sudo xdg-settings set default-web-browser chrome.desktop
xdg-settings set default-web-browser chrome.desktop
xdg-settings set default-web-browser ~/.local/share/applications/chrome.desktop
ls
xdg-settings set default-web-browser chrome.desktop
echo $?
xdg-settings set default-web-browser google-chrome.desktop
sudo xdg-settings set default-web-browser ~/.local/share/applications/google-chrome.desktop
ls
sudo nvim /usr/share/applications/google-chrome.desktop
cp .config/electron-flags.conf .config/chrome-flags.conf
q
f
exec start
sudo nvim /usr/share/applications/google-chrome.desktop
q
exec start
sudo update-desktop-database -v
q
exec start
sudo nvim /usr/share/applications/google-chrome.desktop
sudo update-desktop-database -v
exec start
nvim ~/.config/nvim/
nvim ~/.config/nvim/
q
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
q
nvim ~/.config/waybar/config
q
exec start
paru -Syyup
paru -Syyupq
paru -Syyupq | wc -l
$(( $(paru -Syyupq | wc -l) - 4 ))
if [[ $(( $(paru -Syyupq | wc -l) + $(paru -Syyupqa | wc -l) - 4 )) > 0 ]];then\
echo "hi"\
fi
sum=(( $(paru -Syyupq | wc -l) + $(paru -Syyupqa | wc -l) - 4 ))
sum=$(( $(paru -Syyupq | wc -l) + $(paru -Syyupqa | wc -l) - 4 ))
echo sum
echo $sum
paru -Syyupq -a
paru -Su -a
paru -Syu -a
paru -Syyupq -a
paru -Syupq -a
paru -Syuq -a
paru -Syuq
paru -Syup
paru -Sayup
paru -Saup
paru -Saup
paru -Saup
paru --combinedupgrade -Sypqu
paru --combinedupgrade --aur -Spqu
paru --aur -Spqu
paru -Qu
paru -Up
paru -S pacman-contrib
paclist --help
paclist community
paclist core
pacat --help
pacdiff -o
pup
nvim ~/.config/zsh/functions/_port_aliases
pup
nvim ~/.config/waybar/config 
q
exec start
nvim ~/.config/waybar/config 
q
exec start
f
q
q
padd qt5-wayland qt6-wayland
q
swww img /home/me/media/pics/wp/mononoke_wp.jpg
htop
q
nvim ~/.config/hypr/scripts/process.sh
q
pup
q
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
nvim ~/.config/nvim/
q
pup
q
cd ~/.config/kitty/themes/
bat kanagawa_dragon.conf
q
fc-list : family | rg -i proggy
f
bar
bar
fc-list : family | rg -i share
fc-list : family | rg -i sh
fc-list : family | rg -i sh
bar
bar
fc-list : family style | rg -i sh
fc-list : family style | rg -i sh
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
bar
pup
q
nvim ~/.config/waybar/style.css
q
exec start
nvim ~/.config/hypr/hyprland.conf
nvim ~/.config/environment.d/dark_mode.sh
q
q
rm ~/.cache
rm -rf ~/.cache/kitty
q
nvim ~/.config/environment.d/dark_mode.sh
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
q
nvim ~/.config/hypr/hyprland.conf
q
f
padd papirus-icon-theme
q
nvim ~/.config/hypr/hyprland.conf
exec start
swww img /home/me/media/pics/wp/mononoke_wp.jpg
q
a
a
q
nvim ~/.config/hypr/hyprland.conf
q
nvim ~/.local/bin/scripts/wofi-power-menu.lua 
q
nvim ~/.config/hypr/hyprland.conf
q
padd vieb-bin
q
nvim ~/.config/nvim
q
nvim ~/.config/nvim
q
htop
bat ~/.local/var/logs/postgres/postgres.log
bat ~/.local/var/log/postgres/postgres.log 
ls
f
htop
ls /run/postgresql
clear
git status
git switch react-dom
git status
git reset
git checkout master
git restore
git restore ./
git status
f
q
git fetch --all
git status
git branch
git checkout master
git commit -m afdf
git checkout master
git stash
git checkout master
pup
q
f
unzip first-app.zip -d first-app
ls
cd first-app
ls
rm -rf __MACOSX
ls
cd first-app
ls
f
exec start
pmt
nvim ~/workspace/
ls workspace
pmt
cd ~/workspace/current_project && source ./venv/bin/activate && nvim ~/workspace/current_project/
q
exec start
f
bluetoothctl
padd mpv
htop
padd mpv
htop
padd mpv
pup
f
pmt
git checkout react-dom
git add .
git commit -m afdf
git config --global user.name "Christian Dickerson"
git config --global user.email "christian.dickerson@outlook.com"
git commit -m afdf
git push
git status
git checkout react-dom
clear
git branch
git fetch --all
git pull
git status
git branch
git status
f
q
git switch master
git branch master f754031
git status
git status
git add .gitignore
go mod tidy
ls
git switch main
git commit -m jaf
git switch main
go mod tidy
git status
git add .gitignore
git commit -m 'updated git ignore'
git status
git add uploads/cocktails/
git status
git restore --staged uploads/cocktails/rough/
git status
git add .gitignore
git commit -m 'updated git ignore'
git status
clear
git push
git status
git status
git stash list
git stash clear
gtklock
cd cocktail-codex-react.frontend
yarn run dev
yarn run start
git checkout master
git checkout r
git checkout react-dom
pup
nvim ~/.config/hypr/hyprland.conf
q
exec start
waybar
nvim ~/.config/waybar/config
waybar
exec start
padd yewtube-git
padd python-pafy-git yewtube-git
nvim ~/.config/waybar/config
q
padd python-pafy-git yewtube-git
htop
padd python-pafy-git yewtube-git
padd python-pafy-git
pup
sudo pacman -Syyu
exec start
f
sudo rm db.lck
q
padd python-pafy-git
padd yewtube-git
nvim ~/.config/zsh/functions/_common_aliases
q
yt
paru -S yt-dlp
paru -S aria2
yt
q
yt
yt
q
cd eww
cd .config
ls
cd eww
ls
nvim eww.yuck
cd ~/.local/src/neovim
ls
nvbuild
nvim ~/github.com/sorbetofbeef/build-nvim
q
padd tidy
padd django-lint
q
cd cocktail-codex-react.frontend
yarn run start
cd cocktail-codex-go.backend
go run cmd/api/*.go
htoip
htop
q
exec start
nvim ~/.config/zsh/functions/_common_aliases
q
bat --heko
bat --help
q
dmesg
nvim ~/.config/zsh/functions/_common_aliases
q
sudo /etc/makepkg.conf
sudo nvim /etc/mkinitcpio.conf
f
q
dmes
dmesg
lsmod
q
pup
sudo emerge obs
padd obs
padd obs-studio
padd libva-intel-driver libva-mesa-driver v4l2loopback-dkms
padd libva\\

paru -Ss libva\

paru -Ss libva
paru -Ss intel-med
padd intel-media-driver
clear
q
systemctl --user show-environment
lsmod
q
sudo systemctl start suspend
f
q
nvim ~/.config/wofi/config
nvim ~/.local/bin/scripts/wofi-power-menu.lua 
q
mpv dl
paru -Ss notion
padd notion-app
q
notion-app-enhanced
notion-app-enhanced $(cat ~/.config/chrome-flags.conf)
cd .config/notion-app-enhanced/
l
cd notion-app-enhanced/logs
ls
cd ..
ls
ls logs
f
q
prm notion-app-enhanced
clear
pup
pmt
pmt
psearch tasks
psearch task
psearch taskwarrior-indicator-hg
padd taskwarrior-indicator-hg 
pearchtaskwarrior-tui
pearch taskwarrior-tui
psearch taskwarrior-tui
padd taskwarrior-tui
padd perl-json ruby
paawexh okc
paawexh okcash
padd okcash
psearch okcash
psearch wallet
psearch connect
psearch kconnect
psearch k-connect
psearch android
psearch kdeconnect
padd kdeconnect
padd hunspell aspell hspell
padd hunspell-en_us aspell-en
psearch 2048
psearch dwarf
psearch rimworld
q
bluetoothctl
q
q
bluetoothctl
q
iwctl
q
ip
ip addr
ip addr
ip link
q
ip addrlabel
ls
f
q
exec start
padd netstat
psearch netstat
padd netstat-nat
q
sudo netstat-nat -tunelp | grep -i kdeconnect
sudo netstat-nat
padd netcat
netcat -z -v 10.0.0.224 1714-1764
netcat -z -v 10.0.0.222 1714-1764
clear
killall kdeconnectd
htop
q
exec start
kdeconnect-handler
nvim ~/.config/zsh/.zshenv
q
kdeconnect-app
kdeconnect-app
printenv
q
kdeconnect-app
padd oldschool-pc-font-ttf
clear
q
padd qt5ct
q
q
e
q
q
f
q
q
q
q
q
kitty 
kitty @new-window
q
nvim dev-env/project-session.conf
q
kitty --session ~/workspace/current_project/dev-env/project-session.conf
kitty --help
nvim workspace/current_project/dev-env/project-session.conf
q
kitty --session ~/workspace/current_project/dev-env/project-session.conf
nvim workspace/current_project/dev-env/project-session.conf
q
q
nvim workspace/current_project/dev-env/project-session.conf
q
nvim workspace/current_project/dev-env/project-session.conf
q
q
qq
q
q
cd ~/workspace/current_project
ls
ls
git status
git rm --cached venv/ __pycache__/
git rm -r --cached venv/ __pycache__/
ls
clear
q
q
q
cd ~/workspace/current_project
git rm -r --cached venv/ __pycache__/
git status
git add .
git commit -m 'removed\
'
git push
git status
ls
q
pmt
c
q
q
lsblk
fdisk
sudo fdisk /dev/nvme0n1
lsblk
pmt
cd workspace
l
pmt
l
q
yt
f
f
python -m venv ./venv
source venv/bin/activate
./venv/bin/pip3 install colorama
q
pmt
q
pmt
rm -rf github.com/sorbetofbeef/test
ls
pmt
rm -rf github.com/sorbetofbeef/test
pmt
rm -rf github.com/sorbetofbeef/test
pmt
f
q
f
./pmt.sh
f
source venv/bin/activate
./pmt.sh
nvim
nvim
./pmt.sh
l
cd dev-env
ls
nvim ~/.local/share/pmt/projects/ide.json
cd ..
lf
cd
pmt
deactivate
cd ~/github.com/sorbetofbeef/create-project/
ls
nvim classes.py
pmt
pmt
nvim classes.py
pmt
nvim classes.py
pmt
nvim classes.py
rm -rf ../test
pmt
rm -rf ../test
nvim classes.py
rm -rf ../test
pmt
nvim classes.py
rm -rf ../test
pmt
nvim classes.py
rm -rf ../test
pmt
nvim classes.py
rm -rf ../test
pmt
rm -rf ../test
nvim classes.py
rm -rf ../test
pmt
rm -rf ../test
nvim classes.py
pmt
f
cd ../tes
cd ../test
ls
cd
pmt
./test.sh
q
nvim ~/workspace/current_project/dev-env/project-session.conf
cd ~/github.com/sorbetofbeef/test
ls
q
nvim ~/github.com/sorbetofbeef/create-project
pmt
pmt
nvim ~/github.com/sorbetofbeef/create-project
q
q
nvim ~/github.com/sorbetofbeef/create-project
pmt
rm github.com/sorbetofbeef/test
rm -rf github.com/sorbetofbeef/{test,teswt}
pmt
rm -rf github.com/sorbetofbeef/test
nvim ~/github.com/sorbetofbeef/create-project
pmt
nvim ~/github.com/sorbetofbeef/test/dev-env/project-session.conf
nvim ~/github.com/sorbetofbeef/create-project
pmt
q
htop
rm -rf github.com/sorbetofbeef/test
pmt
rm -rf github.com/sorbetofbeef/test
pmt
cd github.com/sorbetofbeef/create-project
ls
cd ../test
ls
cd dev-env
ls
nvim project-session.conf
ls
cd ../../
rm -rf github.com/sorbetofbeef/test
pmt
ls
rm -rf test
pmt
ls ~/workspace/current_project/dev-env
nvim test/dev-env/project-session.conf
rm -rf test
pmt
nvim test/dev-env/project-session.conf
nvim test/dev-env/project-session.conf
nvim test/dev-env/project-session.conf
q
sudo systemctl start suspend.target
journalctl -xe
sudo systemctl start suspend-then-hibernate.target
journalctl -xe
journalctl -xe
q
sudo systemd-sysusers --help
man systemd-sysusers
cd /usr/lib/systemd/system
ls
sudo nvim talk.service
sudo nvim usbmuxd.service
exec start
journalctl -xe
q
hyprctl reload
q
htop
sudo systemctl enable 
fwupdmgr refresh
fwupdmgr get-devices
fwupdmgr get-approved-firmware
fwupdmgr get-updates
sudo fwupdmgr refresh --force
sudo fwupdmgr get-updates
sudo lspci -k
rmmod snd_hda_intel
sudo rmmod snd_hda_intel
journalctl -xe
lsmod
dmesg
yt
yt
q
pup
q
yt
nvim test/dev-env/project-session.conf
q
pmt
q
rg -h
rg --help
a
q
nvim ~/.config/hypr/hyprland.conf
q
f
padd obsidian
padd obsidian-2-theme obsidian-icon-theme
f
f
lsmod
lsmod | bat
sudo lspci -k
sudo rmmod snd_hda_intel
lspci -k
exec start
nvim ~/.config/hypr/hyprland.conf
nvim ~/.config/nvim/
q
f
nvim ~/docs/obsidian/notes
nvim ~/.config/nvim/lua/user/plugins/modules/obsidian.lua
q
nvim ~/docs/obsidian/bartending
nvim ~/docs/obsidian/bartending.md
nvim ~/.config/nvim/lua/user/plugins/modules/obsidian.lua
q
nvim docs/obsidian/Bartend.md
q
obsidian $(cat ~/.config/chrome-flags.conf)
obsidian $(cat ~/.config/chrome-flags.conf)
nvim ~/.config/nvim/lua/user/plugins
q
f
nvbuild
nvim
q
padd wezterm
q
q
ls
wezterm-gui 
f
pup
padd gtk-theme-bubble-darker-red-git
padd iptables-nft
padd nftables
prm iptables
padd iptables-nft
prm nftables
padd iptables-nft
sudo su
sudo su --login
sudo su --login
sudo su --login
sudo su --login
sudo su --login
su --login
q
su --login
exec start
sudo nft list ruleset
pup
clear
sshd --help
man sshd
sudo systemctl start sshd
htop
ip addr
ls
htop
bat /etc/nftables.conf
bat /etc/nftables.conf.bak
journalctl -xe
journalctl -xe
journalctl -xe
ls
ip addr
ip addrlabel
journalctl -xe
journalctl -xe
ls
sudo journalctl -xe
journalctl -f
sudo nft flush ruleset
clear
sudo su --login
su --login
exit
sudo su --login
exit
exit
f
padd firewalld
prm nftables
prm iptables-nft
ls
cp nftables.conf.bak nftables.conf.new
sudo cp nftables.conf.bak nftables.conf.new
sudo mv nftables.conf nftables.conf.bak
sudo mv nftables.conf.new nftables.conf
sudo nvim nftables.conf
sudo nft flush ruleset
sudo systemctl restart nftables.service
ls
sudo nft list ruleset
q
ls
l
l workspace
exit
aliases
alias
s
ls
cd doc
ls
l
cd ..
l
rm -rf doc
ls
l
rm -rf .fleet .rustup .bash_history .bash* .notion-enhancer
ls
l
cat .zshrc
rm .zshrc .zprofile
q
nvim ~/.config/zsh/.zshenv
f
git status
git add bin/scripts/ share/applications/
git status
git add share/arch-install/ share/fonts/
ls ~/.local/share/fonts
ls ~/.local/share/fonts/OTF
q
f
q
nvim ~/.config/hypr/hyprland.conf
q
cd ~/.local/src
gh repo clone vinceliuice/Orchis-theme
cd Orchis-theme
./install.sh -d ~/.local/share/themes -t all -s compact -l --tweaks primary --tweaks macos --tweaks submenu --tweaks nord --round 3px
cd ~/.local/share/themes
l
l /usr/share/icons
q
l
printenv
printenv | rg -i zd
printenv | rg -i GTK
nvim ~/.config/hypr/hyprland.conf
q
exec start
padd nautilus
padd libadwaita
q
exec start
hyprctl reload
q
pmt
q
cd ~/github.com/sorbetofbeef/ide
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
./pmt.sh
q
f
source venv/bin/activate
pip3 install colorama
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
deactivate
source venv/bin/activate
./pmt.sh
nvim
nvim
./pmt.sh
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
deactivate
source venv/bin/activate
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
f
python -m venv ./venv
source venv/bin/activate
pip3 install colorama
clear
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
./pmt.sh
nvim
./pmt.sh
nvim
./pmt.sh
q
nvim ~/.config/hypr/hyprland.conf
q
f
q
exec start
hyprctl reload
q
nvim ~/.config/hypr/hyprland.conf
q
nvim ~/.config/environment.d/dark_mode.sh
q
cd ~/.config/kitty/themes
l
bat nord_dark.conf
q
nvim ~/.config/hypr/hyprland.conf
q
nvim
q
exec start
q
q
q
q
nvim ~/.config/nvim/lua/user/plugins/modules/theme.lua
nvim ~/.config/environment.d/dark_mode.sh
q
q
nvim
q
nvim
nvim ~/.config/hypr/hyprland.conf
q
hyprctl --help
hyprctl dispatch --help
nvim ~/.config/hypr/hyprland.conf
cd ~/github.com/sorbetofbeef/ide
./pmt.sh
nvim core.py
./pmt.sh
nvim core.py
q
q
q
ln -svf $HOME/github.com/sorbetofbeef/ide/pmt.sh $HOME/.local/bin/pmt
pmt
pmt
q
nvim ~/.config/hypr/hyprland.conf
q
kitty --execute pmt
hyprctl dispatch exec kitty --excute pmt
hyprctl dispatch exec -- kitty --excute pmt
hyprctl dispatch exec kitty '--excute pmt'
hyprctl dispatch exec 'kitty --excute pmt'
hyprctl dispatch exec 'kitty pmt'
q
padd wlrctl
q
wlrctl --help
man wlrctl
q
cd ~/.local/bin/scripts
nvim devour.sh
q
f
q
wlrctl window maximize state:minimized
wlrctl window maximize app_id:pmt
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
q
htop
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
~/github.com/sorbetofbeef/ide/scripts/open_project.sh
hyprctl dispatch exec 'kitty pmt'
~/github.com/sorbetofbeef/ide/scripts/open_project.sh
~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
wlrctl window activate state:inactive
wlrctl window activate state:minimized
wlrctl window maximize app_id:pmt
wlrctl window minimize app_id:pmt
wlrctl window close app_id:pmt
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
htop
q
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
f
f
q
f
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
f
rm -rf venv
python -m venv ./venv
source venv/bin/activate
pip3 install colorama
clear
deactivate
./pmt.sh
source venv/bin/activate
nvim 
deactivate
./pmt.sh
source venv/bin/activate
nvim 
deactivate
source venv/bin/activate
deactivate
./pmt.sh
nvim
q
f
q
cd ~/github.com/sorbetofbeef/ide
source venv/bin/activate
nvim
./pmt.sh
q
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
nvim ~/.config/kitty/kitty.confi
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
kitty list-fonts
kitty list-fonts | rg -i oper
nvim ~/.config/kitty/kitty.conf
q
padd plank
plank
prm plank
q
nvim ~/.config/hypr/scripts/vars.conf
q
f
f
./install.sh -d ~/.local/share/themes -t all -s compact -l --tweaks primary --tweaks macos --tweaks submenu --tweaks dracula --round 3px
./install.sh -d ~/.local/share/themes -t all -s compact -l --tweaks primary --tweaks macos --tweaks submenu --round 3px
f
exec start
nvim ~/.config/hypr/scripts/vars.conf
q
exec start
f
q
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
q
q
pmt
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
pmt
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
pmt
q
f
q
q
q
q
f
nvim ide.sh
./ide.sh
nvim ide.sh
./ide.sh
nvim ide.sh
./ide.sh
nvim ide.sh
./ide.sh
nvim ide.sh
./ide.sh
nvim scripts/open_project.sh
q
nvim ~/.config/hypr/hyprland.conf
q
ide
cd ~/github.com/sorbetofbeef/ide
ln -svf $HOME/github.com/sorbetofbeef/ide/ide.sh $HOME/.local/bin/ide
q
q
q
f
q
q
q
q
q
q
ide
kitty --session ~/workspace/current_project/dev-env/project-session.conf
nvim ~/workspace/current_project/dev-env/project-session.conf
ide
nvim ~/workspace/current_project/dev-env/project-session.conf
ide
q
q
kitty --session ~/workspace/current_project/dev-env/project-session.conf
nvim ~/workspace/current_project/dev-env/project-session.conf
kitty --session ~/workspace/current_project/dev-env/project-session.conf
ide
q
q
q
q
nvim dev-env/project-session.conf
q
nvim ~/github.com/sorbetofbeef/ide/scripts/open_project.sh
ide
q
q
kitty --session ~/workspace/current_project/dev-env/project-session.conf
nvim ~/workspace/current_project/dev-env/project-session.conf
q
q
q
q
q
padd inotifywait
padd inotify-daemon inotify-tools
padd inotify-tools
q
inotifywait --help
q
pup
q
yt
q
cd dl
ls
mkdir -p ../media/vids/pron/trans
mv *.mp4 ../media/vids/pron/trans
cd ../media/vids/pron/trans
mpv ./
exec start
f
q
padd goneovim-git
padd neoray-git
q
neoray
neoray
neoray --help
neoray --file ~/.config/nvim/init.lua
prm neoray-git
paru -R neoray-git
paru -R neoray-git neovim
padd neovide-lunarvim
padd lunarvim-git vulkan-intel vulkan-mesa-layere vulkan-headers
padd lunarvim-git vulkan-intel vulkan-mesa-layers vulkan-headers
q
neovide-lunarvim
neovide-lunarvim --nofork
neovide
neovide --nofork
prm neovi
prm neovide-lunarvim
prm neovim
paru -R neovim-remote neovim
paru -R neovim-remote neovim lunarvim-git
clear
padd goneovim-git
padd goneovim-bin
q
padd libtiff
padd libtiff5
f
q
goneovim
q
goneovim
q
f
f
q
padd gnvim
f
sudo cp /boot/ /home/me/archive/
sudo cp -rv /boot/ /home/me/archive/
ls
cd archive
ls
cd boot/
ls
cd ~/dl
ls
lsblj
lsblk
sudo dd of=/dev/sda if=./Fedora-Workstation-Live-x86_64-38-1.6.iso bs=4K conv=noerror,sync 
exec start
sudo mount /dev/nvme0n1p6 /mnt
cd /mnt
ls
cd homr
cd home/me/Downloads/
ls
cp *.mp4 ~/media/vids/pron/trans/
q
umount /mnt
sudo umount /mnt
f
mpv ./
nvim ~/.config/nvim/lua/user/plugins/modules/firenvim.lua
q
nvim ~/.config/nvim/lua/user/plugins/modules/firenvim.lua
q
pup
q
gpg --list-secret-keys
gpgconf
gpg --edit-key 8184E663DD2DFF0F87F310E16591BE99B027539C
gpg --expert --edit-key 8184E663DD2DFF0F87F310E16591BE99B027539C
gpg --edit-key 8184E663DD2DFF0F87F310E16591BE99B027539C
q
f
cd .local/src/
gh repo clone mortie/mauncher
clear
ls
cd mauncher
ls
make 
sudo make install
mauncher
q
padd vscodium
padd vscodium
q
mauncher-launcher
$PATH | mauncher | sh
echo $PATH | mauncher | sh
for file in .local/bin/*; do\
echo ${file##*/}\
done | mauncher | sh
for file in /usr/bin/* && for local in /usr/local/bin/* && for ~/.local/bin/*; do 
for dir in ${PATH/:/\/\*\ /}; do \
echo $dir >> test.txt\
done
cat test.txt
for dir in ${PATH//:/\/\*\ /}; do \
echo $dir >> test.txt\
done
cat test.txt
for dir in ${PATH//:/\/*\ }; do \
echo $dir >> test.txt\
done
cat test.txt
for dir in ${PATH//:/\/\ }; do \
for file in $dir/*; do\
echo $file > test.txt\
done\
done
for dir in ${PATH//:/\/\ }; do \
for file in $dir//*; do\
echo $file > test.txt\
done\
done
for dir in ${PATH//:/\/\ }; do \
a=( $dir )\
echo ${a[@]}\
done\

for dir in ${PATH//:/\/\ }; do \
a=( $dir )\
echo ${a[w]}\
done\

for dir in ${PATH//:/\/\ }; do \
a=( $dir )\
echo ${a[2]}\
done\

for dir in ${PATH//:/\/\ }; do \
a=( $dir )\
echo ${a[0]}\
done\

for dir in ${PATH//:/\/\ }; do \
a=( $dir )\
echo ${a[1]}\
done\

for dir in ${PATH//:/\/\ \\\n}; do \
a=( $dir )\
echo ${a[1]}\
done\

for dir in ${PATH//:/\/\ \\\n}; do \
a=( $dir )\
echo ${a[*]}\
done\

for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
echo $sub\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
echo ( $sub )\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
b=( $sub )\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
b=( $sub )\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
b=( $sub )\
echo ${b[1]}\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
\
echo $sub read -r c\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
\
echo $sub | read -r c\
echo $c\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
\
echo $sub | read -r c\
echo ${c[4]}\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${a[*]}; do\
\
echo $sub | read -r c\
echo ${c[*]}\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
\
for sub in ${dir[*]}; do\
\
echo $sub | read -r c\
echo ${c[*]}\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
echo $dir | read -r c\
echo ${c}\
done\
\
done
for dir in ${PATH//:/\/\ \\\n}; do \
echo $dir | read -r c\
echo ${c}\
done\
\

for dir in ${PATH//:/\/\ \\\n}; do \
echo $dir | read -r ${c[@]}\
echo ${c}\
done\
\

q
padd fcft
padd tllist
cd ~/.local/src
git clone https://codeberg.org/dnkl/fuzzel.git
cd fuzzel
mkdir bld/release && cd bld/release
mkdir -p bld/release && cd bld/release
meson --buildtype=release ../..
ninja
./fuzzel
mv fuzzel ~/.local/bin
fuzzel
fuzzel --help
padd tofi
tofi
tofi-run | xargs hyprctl exec --
tofi-run | xargs hyprctl dispatch exec --
tofi-run | xargs hyprctl dispatch exec --
q
nvim ~/.config/hypr/hyprland.conf
nvim ~/.config/hypr/hyprland.conf
q
padd android-studio
padd ncurses5-compat-libs
f
gh repo clone elkowar/eww
cd eww
l
cargo build --release --no-default-features --features=wayland
rustup default toolchain nightly
rustup default nightly
rustup update
clear
cargo build --release --no-default-features --features=wayland
rm -rf target/release
cargo build --release --no-default-features --features=wayland
cp -v target/release/eww{-daemon} ~/.local/bin
cp -v target/release/eww{-deamon} ~/.local/bin
ls target/release
cp target/release/eww ~/.local/bin
q
eww --deamon
eww --help
eww daemon
pkill eww
f
q
exec start
q
kitty --session '/home/me/.config/kitty/sessions/popup_terminal.conf'
kitty --session '/home/me/.config/kitty/sessions/popup_terminal.conf'
kitty --session '/home/me/.config/kitty/sessions/popup_terminal.conf'
kitty --session '/home/me/.config/kitty/sessions/popup_terminal.conf'
ide
nvim ~/.local/bin/ide
q
f
q
nvim ~/.local/bin/ide
f
q
neomutt
q
exec start
q
q
cd cocktail-codex-go.backend
go run cmd/api/*.go
cd cocktail-codex-go.backend
go run cmd/api/*.go
go run cmd/api/*.go
go run cmd/api/*.go
cd cocktail-codex-go.backend
go run cmd/api/*.go
go run cmd/api/*.go
go run cmd/api/*.go
htop
q
htop
q
nvim ~/github.com/sorbetofbeef/cocktail-codex/cocktail-codex-react.frontend/src/App.js
q
nvim ~/github.com/sorbetofbeef/cocktail-codex/cocktail-codex-react.frontend/src/App.js
nvim ~/github.com/sorbetofbeef/cocktail-codex/cocktail-codex-react.frontend/src/App.js
nvim ~/github.com/sorbetofbeef/cocktail-codex/cocktail-codex-react.frontend/src/App.js
nvim ~/github.com/sorbetofbeef/cocktail-codex/cocktail-codex-react.frontend/src/App.js
q
nvim
q
cd ~/workspace/current_project
git status
ls
l
cd ../../github.com/sorbetofbeef/cocktail-codex
git status
git status | rg 'On branch '
git status | rg 'On branch ' > some_variable
ls
rm some_variable
ls
git status | rg 'On branch ' > read -r some_variable
l
rm read
git status | rg 'On branch ' | read -r some_variable
ls
echo $some_variable
git branch
nvim ~/.config/nvim/lua/user/plugins/modules/lspsaga.lua
nvim ~/.config/nvim/lua/user/plugins/modules/lspsaga.lua
nvim ~/.config/nvim/lua/user/plugins/modules/lspsaga.lua
q
yt
q
q
ls
bat log.log
rm log.log test.txt
q
bat log.log
rm log.log
w
q
q
ide
kitty --hold ide
kitty --hold ide >> log.log
kitty --hold ide | tee log.log
kitty --hold ide &2> log.log
bat log.log
rm log.log
q
ls
bat log.log
rm log.log
kitty ide
ls
bat log.log
ide
q
nvim ~/workspace/current_project/
cd ~/workspace/current_project/
source venv/bin/activate
nvim
deactivate
source venv/bin/activate
nvim
ide
ls
ls ~
bat ~/log.log
rm log.log
rm ~/log.log
nvim ~/.local/bin/ide
python core.py
nvim
python core.py
nvim
nvim
python core.py
nvim
python core.py
q
cd cocktail-codex-go.backend
go run cmd/api/*.go
cd cocktail-codex-go.backend
go run cmd/api/*.go
q
q
pup
clear
sudo efibootmgr -h
sudo efibootmgr
sudo efibootmgr -o 0009,0002,0001,0005,0000
clear
q
exec start
docker
q
cd /opt/docker-desktop/
l
l
./Docker\ Desktop $(cat ~/.config/chrome-flags.conf)
./Docker\ Desktop --enable-features=UseOzonePlatform --ozone-platform=wayland
./Docker\ Desktop 
cd
prm docker-desktop
clear
padd docker docker-compose docker-swarm docker-machine
padd docker docker-compose docker-machine
padd kubectl swarm
padd kubectl
pup
prm qutebrowser-qt6-git
padd qutebrowser
padd python-opengl qt5-serialport qt5-connectivity qt5-quick3d pdfjs python-adblock pass pass-otp
q
padd neovide
q
pass --help
pass ls
pass init Chrsitian\ Dickerson\ \<christian.dickerson@outlook.com\>
pass ls
pass insert 1password
pass edit 1password
man pass-otp
padd lazydocker
cargo install install-update
cargo search update
cargo search install-update
cargo install cargo-update
neovide
neovide --nofork
prm neovide
padd glow
q
padd lazydocker
padd docker-desktop
padd docker-desktop
q
padd tree-sitter-cli tree-sitter
padd tree-sitter-cli tree-sitter
q
padd php julia luarocks composer javacc
padd php julia luarocks composer jdk-openjdk
q
w
q
f
q
f
q
nvim ~/.config/kitty/themes/nord_dark.conf
q
nvim
nvim
nvim
q
exec start
cd ~/.local/src
git clone https://github.com/EliverLara/firefox-nordic-theme && cd firefox-nordic-theme\
./scripts/install.sh
./scripts/install.sh -g
cd ~/.local/share/themes
gh repo clone EliverLara/Nordic
nvim ~/.config/hypr/scripts/vars.conf
q
exec start
q
f
q
f
q
q
f
q
xdg-open neovim.desktop
xdg-open ~/.local/share/applications/neovim.desktop
nvim ~/.config/kitty/kitty.conf
q
q
q
kitty
kitty
q
q
ki
kitty
q
q
